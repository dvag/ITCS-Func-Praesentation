import { forceUpdate, h, Host, } from "@stencil/core";
import { PersonSVG } from "./assets";
import { ElementIdGenerator } from "../../../classes/element-id-handling";
import { BreakpointAware } from "../../../classes/breakpoint-aware";
/**
 * Template for an error page (e.g '404 - Page not found').
 *
 * @name Error page
 * @path /Templates
 * @icon ban
 * @stable
 */
export class DxErrorPage {
  constructor() {
    /**
     * The label of the action-button below the action description.
     *
     * @value string: The action description text.
     * @example action
     */
    this.actionlabel = "Zur Startseite";
  }
  connectedCallback() {
    this.breakpointAware = new BreakpointAware(() => forceUpdate(this.self), true);
  }
  disconnectedCallback() {
    this.breakpointAware.disconnect();
  }
  renderPerson(shouldRender) {
    if (!shouldRender) {
      return;
    }
    return h(PersonSVG, null);
  }
  render() {
    const renderSmallViewportPerson = this.breakpointAware.getEffectiveValue({
      mq1: true,
      mq4: false,
    });
    return (h(Host, null, h("dx-golden-stage", null, h("div", { slot: "hero-image", class: "golden-stage-background" }, this.renderPerson(renderSmallViewportPerson)), h("dx-text", { type: "h2", color: "white", class: "reason" }, this.reason), h("dx-text", { color: "white" }, this.description), this.renderPerson(!renderSmallViewportPerson)), h("dx-container", { type: "page", color: "white", class: "back-to-start-container" }, h("dx-text", null, this.actiondescription), h("dx-button", { id: ElementIdGenerator.createId(this.self, "back-to-start-button"), type: "primary-m", label: this.actionlabel, class: "back-to-start-button", onClick: () => this.action.emit() }))));
  }
  static get is() { return "dx-error-page"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["dx-error-page.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["dx-error-page.css"]
    };
  }
  static get properties() {
    return {
      "reason": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: The reason text."
            }, {
              "name": "example",
              "text": "labels"
            }, {
              "name": "important",
              "text": undefined
            }],
          "text": "The reason the error page is displayed."
        },
        "attribute": "reason",
        "reflect": false
      },
      "description": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: The description text."
            }, {
              "name": "example",
              "text": "labels"
            }, {
              "name": "important",
              "text": undefined
            }],
          "text": "The description of the error that occurred."
        },
        "attribute": "description",
        "reflect": false
      },
      "actionlabel": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: The action description text."
            }, {
              "name": "example",
              "text": "action"
            }],
          "text": "The label of the action-button below the action description."
        },
        "attribute": "actionlabel",
        "reflect": false,
        "defaultValue": "\"Zur Startseite\""
      },
      "actiondescription": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: The action description text."
            }, {
              "name": "example",
              "text": "action"
            }, {
              "name": "important",
              "text": undefined
            }],
          "text": "The description of the action button."
        },
        "attribute": "actiondescription",
        "reflect": false
      }
    };
  }
  static get events() {
    return [{
        "method": "action",
        "name": "action",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [{
              "name": "example",
              "text": "action"
            }],
          "text": "Fires when the user interacts with the button."
        },
        "complexType": {
          "original": "void",
          "resolved": "void",
          "references": {}
        }
      }];
  }
  static get elementRef() { return "self"; }
}
