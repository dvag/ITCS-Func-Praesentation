import { Host, h } from "@stencil/core";
/**
 * Component which presents the user the actual representative.
 *
 * @path /Scaffold/Header
 * @name Representative Information
 * @shortname Representative
 * @icon handshake
 * @stable
 */
export class DxRepresentativeInfo {
  constructor() {
    /**
     * Specifies the text before mentioning the name of the representative.
     * @value assistant: Shows "Assistent von: " as name prefix.
     * @value representative: Shows "Vertreter von: " as name prefix.
     * @example type
     */
    this.type = "representative";
  }
  renderText() {
    return (h("dx-text", { type: "Infotext-Small" }, this.type === "assistant" ? ASSISTANT_TEXT : REPRESENTATIVE_TEXT, " ", this.name));
  }
  render() {
    return (h(Host, null, h("div", { class: "container" }, this.renderText())));
  }
  static get is() { return "dx-representative-info"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["dx-representative-info.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["dx-representative-info.css"]
    };
  }
  static get properties() {
    return {
      "type": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "\"assistant\" | \"representative\"",
          "resolved": "\"assistant\" | \"representative\"",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "assistant: Shows \"Assistent von: \" as name prefix."
            }, {
              "name": "value",
              "text": "representative: Shows \"Vertreter von: \" as name prefix."
            }, {
              "name": "example",
              "text": "type"
            }],
          "text": "Specifies the text before mentioning the name of the representative."
        },
        "attribute": "type",
        "reflect": false,
        "defaultValue": "\"representative\""
      },
      "name": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: the name of the representative."
            }, {
              "name": "example",
              "text": "example"
            }, {
              "name": "example",
              "text": "type"
            }, {
              "name": "important",
              "text": undefined
            }],
          "text": "Specifies the name of the representative."
        },
        "attribute": "name",
        "reflect": false
      }
    };
  }
}
const ASSISTANT_TEXT = "Assistenz von";
const REPRESENTATIVE_TEXT = "Vertretung von";
