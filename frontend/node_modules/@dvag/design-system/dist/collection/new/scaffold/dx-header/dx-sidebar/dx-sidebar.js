import { h, Host, } from "@stencil/core";
import { ModalScrollHelper } from "../../../../classes/modal-scroll-helper";
import { TransitionStartHelper } from "../../../../classes/event.util";
// TODO: Firefox issue: When closing the sidebar the sidebar jumps a bit to the left because the scroll-container of the body is appearing again
/**
 * @internal
 */
export class DxSidebar {
  constructor() {
    this.transitionStartHelper = new TransitionStartHelper(this, (e) => this.handleSidebarTransitionStart(e));
    this.open = false;
  }
  componentDidRender() {
    const scrollHelper = ModalScrollHelper.instance();
    if (this.open) {
      scrollHelper.block(this.self);
    }
    else {
      scrollHelper.unblock(this.self);
    }
  }
  disconnectedCallback() {
    ModalScrollHelper.instance().unblock(this.self);
  }
  setSidebar(sidebar) {
    this.sidebar = sidebar;
    this.transitionStartHelper.on(sidebar);
  }
  handleSidebarTransitionStart(e) {
    if (!this.isSidebarOpenCloseTransition(e)) {
      return;
    }
    this.sidebar.style.setProperty("visibility", "visible");
  }
  handleSidebarTransitionEnd(e) {
    if (!this.isSidebarOpenCloseTransition(e)) {
      return;
    }
    if (!this.open) {
      this.sidebar.style.setProperty("visibility", "hidden");
    }
  }
  isSidebarOpenCloseTransition(e) {
    return e.target === this.sidebar && e.propertyName === "transform";
  }
  close() {
    this.open = false;
    this.openChange.emit(this.open);
  }
  render() {
    return (h(Host, { class: {
        open: this.open,
      } }, h("div", { class: { "on-top-of-overlay": true } }, h("div", { class: "side-bar", ref: (ref) => this.setSidebar(ref), onTransitionEnd: (e) => this.handleSidebarTransitionEnd(e) }, h("div", { class: { "side-bar-content": true } }, h("slot", null)))), h("div", { class: "overlay", onClick: () => {
        this.close();
      } })));
  }
  static get is() { return "dx-sidebar"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["dx-sidebar.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["dx-sidebar.css"]
    };
  }
  static get properties() {
    return {
      "open": {
        "type": "boolean",
        "mutable": true,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "open",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get events() {
    return [{
        "method": "openChange",
        "name": "openChange",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        }
      }];
  }
  static get elementRef() { return "self"; }
}
