/**
 * An app which is shown within the `<dx-header-app-favorites>`.
 *
 * @name Header App Favorites Application
 * @shortname App
 * @path /Scaffold/Header/App Favorites
 * @icon star
 *
 * @stable
 */
export class DxHeaderAppFavoritesApp {
  async toAppFavoritesApp() {
    return {
      id: this.appid,
      icon: this.icon,
      name: this.appname,
    };
  }
  static get is() { return "dx-header-app-favorites-app"; }
  static get encapsulation() { return "shadow"; }
  static get properties() {
    return {
      "appid": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: An unique id of the application."
            }],
          "text": "An identificator of the application."
        },
        "attribute": "appid",
        "reflect": true
      },
      "icon": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: An icon name."
            }],
          "text": "An icon belonging to the application."
        },
        "attribute": "icon",
        "reflect": true
      },
      "appname": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: The name."
            }],
          "text": "The name of the application."
        },
        "attribute": "appname",
        "reflect": true
      }
    };
  }
  static get methods() {
    return {
      "toAppFavoritesApp": {
        "complexType": {
          "signature": "() => Promise<AppFavoritesApp>",
          "parameters": [],
          "references": {
            "Promise": {
              "location": "global"
            },
            "AppFavoritesApp": {
              "location": "import",
              "path": "../app-favorite"
            }
          },
          "return": "Promise<AppFavoritesApp>"
        },
        "docs": {
          "text": "",
          "tags": []
        }
      }
    };
  }
}
