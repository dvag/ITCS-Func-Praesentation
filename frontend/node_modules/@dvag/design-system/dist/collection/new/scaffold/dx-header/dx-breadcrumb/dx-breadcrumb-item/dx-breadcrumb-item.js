/**
 * Item which is part of a breadcrumb.
 *
 * @path /Scaffold/Header/Breadcrumb
 * @name Breadcrumb Item
 * @shortname Item
 * @icon arrow-right
 * @stable
 */
export class DxBreadcrumbItem {
  /**
   * @internal
   */
  async toItem() {
    var _a;
    return {
      label: this.label,
      value: (_a = this.value) !== null && _a !== void 0 ? _a : this.label,
    };
  }
  static get is() { return "dx-breadcrumb-item"; }
  static get encapsulation() { return "shadow"; }
  static get properties() {
    return {
      "label": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: the name of the breadcrumb item."
            }],
          "text": "Specifies the name of this item in the breadcrumb path which is displayed in `<dx-breadcrumb>`."
        },
        "attribute": "label",
        "reflect": true
      },
      "value": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: the value of this part."
            }],
          "text": "Specifies the value of this item."
        },
        "attribute": "value",
        "reflect": true
      }
    };
  }
  static get methods() {
    return {
      "toItem": {
        "complexType": {
          "signature": "() => Promise<BreadcrumbItem>",
          "parameters": [],
          "references": {
            "Promise": {
              "location": "global"
            },
            "BreadcrumbItem": {
              "location": "local"
            }
          },
          "return": "Promise<BreadcrumbItem>"
        },
        "docs": {
          "text": "",
          "tags": [{
              "name": "internal",
              "text": undefined
            }]
        }
      }
    };
  }
}
