import { forceUpdate, h, Host, } from "@stencil/core";
import { assert } from "../../../classes/assert";
import { BreakpointAware } from "../../../classes/breakpoint-aware";
/**
 * Displays a image within a `<dx-card>` component.
 *
 * @path /Card
 * @name Card Image
 * @shortname Image
 * @icon image
 * @stable
 */
export class DxCardImage {
  constructor() {
    /**
     * Defines the fit of the image.
     *
     * @value  proportional: The image is scaled proportional to its width.
     * @value cover: The image is displayed with a set height. The height is set via the `coverheightmq` properties. The visible part of the image can be controlled using the `coverpositionmq` properties.
     */
    this.fit = "proportional";
  }
  connectedCallback() {
    this.breakpointAware = new BreakpointAware(() => forceUpdate(this), true);
  }
  disconnectedCallback() {
    this.breakpointAware.disconnect();
  }
  render() {
    var _a, _b;
    assert(this.url != null, () => "<dx-card-image-header> Eigenschaft 'url' muss gesetzt sein.");
    if (this.fit === "proportional") {
      return (h(Host, null, h("img", { src: this.url, alt: "", class: "proportional-image" })));
    }
    else {
      const coverHeight = (_a = this.breakpointAware.getEffectiveValue({
        mq1: this.coverheightmq1,
        mq2: this.coverheightmq2,
        mq3: this.coverheightmq3,
        mq4: this.coverheightmq4,
        mq5: this.coverheightmq5,
      })) !== null && _a !== void 0 ? _a : "300px";
      const coverPosition = (_b = this.breakpointAware.getEffectiveValue({
        mq1: this.coverpositionmq1,
        mq2: this.coverpositionmq2,
        mq3: this.coverpositionmq3,
        mq4: this.coverpositionmq4,
        mq5: this.coverpositionmq5,
      })) !== null && _b !== void 0 ? _b : "center";
      return (h(Host, null, h("div", { class: "cover-image", style: {
          height: coverHeight,
          "background-position": coverPosition,
          "background-image": `url(${this.url})`,
        } })));
    }
  }
  static get is() { return "dx-card-image"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["dx-card-image.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["dx-card-image.css"]
    };
  }
  static get properties() {
    return {
      "url": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: The path to the image file."
            }],
          "text": "Specifies a path to the image file."
        },
        "attribute": "url",
        "reflect": false
      },
      "fit": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "\"proportional\" | \"cover\"",
          "resolved": "\"cover\" | \"proportional\"",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "proportional: The image is scaled proportional to its width."
            }, {
              "name": "value",
              "text": "cover: The image is displayed with a set height. The height is set via the `coverheightmq` properties. The visible part of the image can be controlled using the `coverpositionmq` properties."
            }],
          "text": "Defines the fit of the image."
        },
        "attribute": "fit",
        "reflect": false,
        "defaultValue": "\"proportional\""
      },
      "coverheightmq1": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: a height in `px` or `%`."
            }],
          "text": "Defines the height of the image for the MQ1 breakpoint in cover mode using standard css notation.\nOnly has an effect when fit type \"cover\" is used."
        },
        "attribute": "coverheightmq1",
        "reflect": false
      },
      "coverheightmq2": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: a height in `px` or %."
            }],
          "text": "Defines the height of the image for the MQ2 breakpoint in cover mode using standard css notation.\nOnly has an effect when fit type \"cover\" is used."
        },
        "attribute": "coverheightmq2",
        "reflect": false
      },
      "coverheightmq3": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: a height in `px` or `%`."
            }],
          "text": "Defines the height of the image for the MQ3 breakpoint in cover mode using standard css notation.\nOnly has an effect when fit type \"cover\" is used."
        },
        "attribute": "coverheightmq3",
        "reflect": false
      },
      "coverheightmq4": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: a height in `px` or %."
            }],
          "text": "Defines the height of the image for the MQ4 breakpoint in cover mode using standard css notation.\nOnly has an effect when fit type \"cover\" is used."
        },
        "attribute": "coverheightmq4",
        "reflect": false
      },
      "coverheightmq5": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: a height in `px` or %."
            }],
          "text": "Defines the height of the image for the MQ5 breakpoint in cover mode using standard css notation.\nOnly has an effect when fit type \"cover\" is used."
        },
        "attribute": "coverheightmq5",
        "reflect": false
      },
      "coverpositionmq1": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: a position in % or px."
            }],
          "text": "Defines the position of the image using standard css notation:\nOnly has an effect when fit type \"cover\" is used.\n\nFor more information see: https://developer.mozilla.org/en-US/docs/Web/CSS/background-position"
        },
        "attribute": "coverpositionmq1",
        "reflect": false
      },
      "coverpositionmq2": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: a position in % or px."
            }],
          "text": "Defines the position of the image using standard css notation:\nOnly has an effect when fit type \"cover\" is used.\n\nFor more information see: https://developer.mozilla.org/en-US/docs/Web/CSS/background-position"
        },
        "attribute": "coverpositionmq2",
        "reflect": false
      },
      "coverpositionmq3": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: a position in % or px."
            }],
          "text": "Defines the position of the image using standard css notation:\nOnly has an effect when fit type \"cover\" is used.\n\nFor more information see: https://developer.mozilla.org/en-US/docs/Web/CSS/background-position"
        },
        "attribute": "coverpositionmq3",
        "reflect": false
      },
      "coverpositionmq4": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: a position in % or px."
            }],
          "text": "Defines the position of the image using standard css notation:\nOnly has an effect when fit type \"cover\" is used.\n\nFor more information see: https://developer.mozilla.org/en-US/docs/Web/CSS/background-position"
        },
        "attribute": "coverpositionmq4",
        "reflect": false
      },
      "coverpositionmq5": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: a position in % or px."
            }],
          "text": "Defines the position of the image using standard css notation:\nOnly has an effect when fit type \"cover\" is used.\n\nFor more information see: https://developer.mozilla.org/en-US/docs/Web/CSS/background-position"
        },
        "attribute": "coverpositionmq5",
        "reflect": false
      }
    };
  }
}
