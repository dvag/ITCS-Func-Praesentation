import { clamp } from "../../../classes/math-util";
export class PaginatorState {
  constructor(page, count, onStateChange) {
    this.page = page;
    this.count = count;
    this.onStateChange = onStateChange;
    this.previousState = {
      page: this.page,
      count: this.count,
      items: this.build(),
      movedToLeft: false,
    };
  }
  toTheLeft() {
    this.setPage(this.page - 1);
  }
  toTheRight() {
    this.setPage(this.page + 1);
  }
  setPage(page) {
    page = clamp(page, 1, this.count);
    if (page !== this.page) {
      const movedToLeft = page < this.page;
      this.page = page;
      const currentState = {
        page: this.page,
        count: this.count,
        items: this.build(),
        movedToLeft,
      };
      this.onStateChange(currentState, this.previousState);
      this.previousState = currentState;
    }
  }
  build() {
    const diffToStart = this.page - 1;
    const diffToEnd = this.count - this.page;
    const result = [];
    if (diffToStart > 3) {
      result.push("small", "medium", "large", "large", "active");
    }
    else if (diffToStart > 2) {
      result.push("medium", "large", "large", "active");
    }
    else {
      for (let i = 1; i <= 3; ++i) {
        if (this.page === i) {
          result.push("active");
        }
        else {
          result.push("large");
        }
      }
    }
    if (diffToEnd > 1) {
      result.push("medium", "small");
    }
    else if (diffToEnd === 1) {
      result.push("medium");
    }
    return result;
  }
}
