import { h, Host, } from "@stencil/core";
import { ElementIdGenerator } from "../../../../classes/element-id-handling";
/**
 * @internal
 */
export class DxInternalWizardStep {
  constructor() {
    this.finished = false;
    this.orientation = "horizontal";
    this.state = "unvisited";
    this.neighborIsInteractive = false;
    this.isFirstStep = false;
    this.isLastStep = false;
  }
  getElementSwapperActiveSlot() {
    if (this.state === "edit") {
      return "first";
    }
    if (this.state === "finished") {
      return "second";
    }
    return "none";
  }
  isInteractive() {
    return this.state === "visited" || this.state === "finished";
  }
  renderState() {
    return (h("dx-element-swapper", { active: this.getElementSwapperActiveSlot() }, h("dx-icon", { class: "edit-icon", icon: "edit", color: "white", slot: "first" }), h("dx-icon", { icon: "state-success", color: "white", size: 16, slot: "second" })));
  }
  renderStepButton() {
    const isInteractive = this.isInteractive();
    return (h("div", { class: {
        state: true,
        interactive: isInteractive,
        finished: this.state === "finished",
        edit: this.state === "edit",
      } }, this.renderState()));
  }
  renderLabel() {
    return (h("div", { class: "label-container" }, h("dx-text", { class: { label: true, bold: this.state === "edit" } }, this.label)));
  }
  render() {
    return (h(Host, { class: {
        "orientation-horizontal": this.orientation === "horizontal",
        "orientation-vertical": this.orientation === "vertical",
        "extended-view": this.isExtendedView,
        "mobile-view": !this.isExtendedView,
        "is-first-step": this.isFirstStep,
        "is-last-step": this.isLastStep,
      } }, h("button", { id: ElementIdGenerator.createId(this.self, "-control"), class: "button", onClick: () => this.interaction.emit(), disabled: !this.isInteractive() }, h("div", { class: {
        "step-container": true,
      } }, h("div", { class: {
        "horizontal-line": true,
        left: true,
        blue: this.isInteractive() || this.state === "edit",
        visible: !this.isFirstStep,
      } }), this.renderStepButton(), h("div", { class: {
        "horizontal-line": true,
        right: true,
        blue: this.neighborIsInteractive,
        visible: !this.isLastStep,
      } })), this.renderLabel())));
  }
  static get is() { return "dx-internal-wizard-step"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["dx-internal-wizard-step.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["dx-internal-wizard-step.css"]
    };
  }
  static get properties() {
    return {
      "finished": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "finished",
        "reflect": false,
        "defaultValue": "false"
      },
      "value": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "value",
        "reflect": false
      },
      "orientation": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "Orientation",
          "resolved": "\"horizontal\" | \"vertical\"",
          "references": {
            "Orientation": {
              "location": "import",
              "path": "../../../../classes/common-types"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "orientation",
        "reflect": false,
        "defaultValue": "\"horizontal\""
      },
      "state": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "WizardStepState",
          "resolved": "\"edit\" | \"finished\" | \"unvisited\" | \"visited\"",
          "references": {
            "WizardStepState": {
              "location": "local"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "state",
        "reflect": false,
        "defaultValue": "\"unvisited\""
      },
      "label": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "label",
        "reflect": false
      },
      "neighborIsInteractive": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "neighbor-is-interactive",
        "reflect": false,
        "defaultValue": "false"
      },
      "isFirstStep": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "is-first-step",
        "reflect": false,
        "defaultValue": "false"
      },
      "isLastStep": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "is-last-step",
        "reflect": false,
        "defaultValue": "false"
      },
      "isExtendedView": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "is-extended-view",
        "reflect": false
      }
    };
  }
  static get events() {
    return [{
        "method": "stateChanged",
        "name": "stateChanged",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "WizardStepState",
          "resolved": "\"edit\" | \"finished\" | \"unvisited\" | \"visited\"",
          "references": {
            "WizardStepState": {
              "location": "local"
            }
          }
        }
      }, {
        "method": "interaction",
        "name": "interaction",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": ""
        },
        "complexType": {
          "original": "void",
          "resolved": "void",
          "references": {}
        }
      }];
  }
  static get elementRef() { return "self"; }
}
