import { forceUpdate, h, Host, } from "@stencil/core";
import { BreakpointAware } from "../../../classes/breakpoint-aware";
import { assertIsPossibleSize, isPossibleSize, } from "../../../classes/sizes.util";
/**
 * Component which takes space between two elements.
 * The size of this component can be a value of a predefined set of sizes defined in the concepts.
 *
 * @name Spacer
 * @path /Layout
 * @icon arrows-alt-h
 * @stable
 */
export class DxSpacer {
  connectedCallback() {
    var _a, _b, _c;
    // Do not initialize breakpointAware when mq1 is the only valid option
    if (isPossibleSize(this.mq1) &&
      !isPossibleSize((_c = (_b = (_a = this.mq2) !== null && _a !== void 0 ? _a : this.mq3) !== null && _b !== void 0 ? _b : this.mq4) !== null && _c !== void 0 ? _c : this.mq5)) {
      return;
    }
    this.breakpointAware = new BreakpointAware(() => forceUpdate(this), true);
  }
  disconnectedCallback() {
    var _a;
    (_a = this.breakpointAware) === null || _a === void 0 ? void 0 : _a.disconnect();
  }
  componentWillRender() {
    this.checkValue(this.mq1);
    this.checkValue(this.mq2);
    this.checkValue(this.mq3);
    this.checkValue(this.mq4);
    this.checkValue(this.mq5);
  }
  checkValue(size) {
    if (size == null) {
      return;
    }
    assertIsPossibleSize(size);
  }
  getCurrentBreakpointValue() {
    var _a, _b, _c;
    return (_c = ((_b = (_a = this.breakpointAware) === null || _a === void 0 ? void 0 : _a.getEffectiveValue({
      mq1: this.mq1,
      mq2: this.mq2,
      mq3: this.mq3,
      mq4: this.mq4,
      mq5: this.mq5,
    })) !== null && _b !== void 0 ? _b : this.mq1)) === null || _c === void 0 ? void 0 : _c.toString();
  }
  render() {
    const breakpointValue = this.getCurrentBreakpointValue();
    const isHorizontal = breakpointValue.includes("h");
    const isVertical = breakpointValue.includes("v");
    const isSquare = !(isVertical || isHorizontal);
    const cssSize = `${parseInt(breakpointValue)}px`;
    return (h(Host, null, h("div", { style: {
        width: isHorizontal || isSquare ? cssSize : "0",
        height: isVertical || isSquare ? cssSize : "0",
      } })));
  }
  static get is() { return "dx-spacer"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["dx-spacer.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["dx-spacer.css"]
    };
  }
  static get properties() {
    return {
      "mq1": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "Size",
          "resolved": "\"0\" | \"4\" | \"8h\" | \"0v\" | \"0h\" | \"4v\" | \"4h\" | \"8\" | \"8v\" | \"16\" | \"16v\" | \"16h\" | \"24\" | \"24v\" | \"24h\" | \"32\" | \"32v\" | \"32h\" | \"40\" | \"40v\" | \"40h\" | \"48\" | \"48v\" | \"48h\" | \"56\" | \"56v\" | \"56h\" | \"64\" | \"64v\" | \"64h\" | \"80\" | \"80v\" | \"80h\" | \"120\" | \"120v\" | \"120h\"",
          "references": {
            "Size": {
              "location": "import",
              "path": "../../../classes/sizes.util"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "0, 4, 8, 16, 24, 32, 40, 48, 56, 64, 80, 120: The predefined width and height of this component"
            }, {
              "name": "value",
              "text": "postfix 'v' (e.g '4v', '64v'): The defined size will only be applied to the height of the component."
            }, {
              "name": "value",
              "text": "postfix 'h' (e.g '4h', '64h'): The defined size will only be applied to the height of the component."
            }, {
              "name": "value",
              "text": "no postfix (e.g 4, 64): The defined size will be applied to the width and height of the component."
            }],
          "text": "Defines the size of the spacer for the MQ1 breakpoint."
        },
        "attribute": "mq1",
        "reflect": false
      },
      "mq2": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "Size",
          "resolved": "\"0\" | \"4\" | \"8h\" | \"0v\" | \"0h\" | \"4v\" | \"4h\" | \"8\" | \"8v\" | \"16\" | \"16v\" | \"16h\" | \"24\" | \"24v\" | \"24h\" | \"32\" | \"32v\" | \"32h\" | \"40\" | \"40v\" | \"40h\" | \"48\" | \"48v\" | \"48h\" | \"56\" | \"56v\" | \"56h\" | \"64\" | \"64v\" | \"64h\" | \"80\" | \"80v\" | \"80h\" | \"120\" | \"120v\" | \"120h\"",
          "references": {
            "Size": {
              "location": "import",
              "path": "../../../classes/sizes.util"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "0, 4, 8, 16, 24, 32, 40, 48, 56, 64, 80, 120: The predefined width and height of this component"
            }, {
              "name": "value",
              "text": "postfix 'v' (e.g '4v', '64v'): The defined size will only be applied to the height of the component."
            }, {
              "name": "value",
              "text": "postfix 'h' (e.g '4h', '64h'): The defined size will only be applied to the height of the component."
            }, {
              "name": "value",
              "text": "no postfix (e.g 4, 64): The defined size will be applied to the width and height of the component."
            }],
          "text": "Defines the size of the spacer for the MQ2 breakpoint."
        },
        "attribute": "mq2",
        "reflect": false
      },
      "mq3": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "Size",
          "resolved": "\"0\" | \"4\" | \"8h\" | \"0v\" | \"0h\" | \"4v\" | \"4h\" | \"8\" | \"8v\" | \"16\" | \"16v\" | \"16h\" | \"24\" | \"24v\" | \"24h\" | \"32\" | \"32v\" | \"32h\" | \"40\" | \"40v\" | \"40h\" | \"48\" | \"48v\" | \"48h\" | \"56\" | \"56v\" | \"56h\" | \"64\" | \"64v\" | \"64h\" | \"80\" | \"80v\" | \"80h\" | \"120\" | \"120v\" | \"120h\"",
          "references": {
            "Size": {
              "location": "import",
              "path": "../../../classes/sizes.util"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "0, 4, 8, 16, 24, 32, 40, 48, 56, 64, 80, 120: The predefined width and height of this component"
            }, {
              "name": "value",
              "text": "postfix 'v' (e.g '4v', '64v'): The defined size will only be applied to the height of the component."
            }, {
              "name": "value",
              "text": "postfix 'h' (e.g '4h', '64h'): The defined size will only be applied to the height of the component."
            }, {
              "name": "value",
              "text": "no postfix (e.g 4, 64): The defined size will be applied to the width and height of the component."
            }],
          "text": "Defines the size of the spacer for the MQ3 breakpoint."
        },
        "attribute": "mq3",
        "reflect": false
      },
      "mq4": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "Size",
          "resolved": "\"0\" | \"4\" | \"8h\" | \"0v\" | \"0h\" | \"4v\" | \"4h\" | \"8\" | \"8v\" | \"16\" | \"16v\" | \"16h\" | \"24\" | \"24v\" | \"24h\" | \"32\" | \"32v\" | \"32h\" | \"40\" | \"40v\" | \"40h\" | \"48\" | \"48v\" | \"48h\" | \"56\" | \"56v\" | \"56h\" | \"64\" | \"64v\" | \"64h\" | \"80\" | \"80v\" | \"80h\" | \"120\" | \"120v\" | \"120h\"",
          "references": {
            "Size": {
              "location": "import",
              "path": "../../../classes/sizes.util"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "0, 4, 8, 16, 24, 32, 40, 48, 56, 64, 80, 120: The predefined width and height of this component"
            }, {
              "name": "value",
              "text": "postfix 'v' (e.g '4v', '64v'): The defined size will only be applied to the height of the component."
            }, {
              "name": "value",
              "text": "postfix 'h' (e.g '4h', '64h'): The defined size will only be applied to the height of the component."
            }, {
              "name": "value",
              "text": "no postfix (e.g 4, 64): The defined size will be applied to the width and height of the component."
            }],
          "text": "Defines the size of the spacer for the MQ4 breakpoint."
        },
        "attribute": "mq4",
        "reflect": false
      },
      "mq5": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "Size",
          "resolved": "\"0\" | \"4\" | \"8h\" | \"0v\" | \"0h\" | \"4v\" | \"4h\" | \"8\" | \"8v\" | \"16\" | \"16v\" | \"16h\" | \"24\" | \"24v\" | \"24h\" | \"32\" | \"32v\" | \"32h\" | \"40\" | \"40v\" | \"40h\" | \"48\" | \"48v\" | \"48h\" | \"56\" | \"56v\" | \"56h\" | \"64\" | \"64v\" | \"64h\" | \"80\" | \"80v\" | \"80h\" | \"120\" | \"120v\" | \"120h\"",
          "references": {
            "Size": {
              "location": "import",
              "path": "../../../classes/sizes.util"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "0, 4, 8, 16, 24, 32, 40, 48, 56, 64, 80, 120: The predefined width and height of this component"
            }, {
              "name": "value",
              "text": "postfix 'v' (e.g '4v', '64v'): The defined size will only be applied to the height of the component."
            }, {
              "name": "value",
              "text": "postfix 'h' (e.g '4h', '64h'): The defined size will only be applied to the height of the component."
            }, {
              "name": "value",
              "text": "no postfix (e.g 4, 64): The defined size will be applied to the width and height of the component."
            }],
          "text": "Defines the size of the spacer for the MQ5 breakpoint."
        },
        "attribute": "mq5",
        "reflect": false
      }
    };
  }
  static get elementRef() { return "self"; }
}
