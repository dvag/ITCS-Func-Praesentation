import { h, } from "@stencil/core";
import { Point, toPoint } from "../../../../classes/math-util";
import { ElementIdGenerator } from "../../../../classes/element-id-handling";
import { DragController } from "../../../../classes/drag-controller";
/**
 * @internal
 */
export class DxSortHandle {
  componentWillLoad() {
    this.dragController = new DragController((startX, startY) => this.dragBegin.emit(new Point(startX, startY)), (event) => this.dragUpdate.emit(toPoint(event)), () => undefined, () => this.dragFinish.emit());
  }
  render() {
    return (h("button", { id: ElementIdGenerator.createId(this.self, "control"), class: { "sort-handle": true, draggable: this.internaldraggable }, type: "text", color: "default", onTouchStart: (e) => this.dragController.onTouchStart(e), onPointerDown: (e) => this.dragController.onPointerDown(e) }, h("dx-icon", { icon: "move", size: 24, color: "border" })));
  }
  static get is() { return "dx-sort-handle"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["dx-sort-handle.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["dx-sort-handle.css"]
    };
  }
  static get properties() {
    return {
      "internaldraggable": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "internal",
              "text": "This property is managed by a parent <dx-sort-item> element and indicates whether this component is draggable or not."
            }],
          "text": ""
        },
        "attribute": "internaldraggable",
        "reflect": false
      },
      "internaldragging": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "internal",
              "text": "This property is managed by a parent <dx-sort-item> element and indicates whether this component is currenlty dragged or not."
            }],
          "text": ""
        },
        "attribute": "internaldragging",
        "reflect": false
      }
    };
  }
  static get events() {
    return [{
        "method": "dragBegin",
        "name": "dragBegin",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [{
              "name": "internal",
              "text": "This event fires when the user begins to drags this component."
            }],
          "text": ""
        },
        "complexType": {
          "original": "Point",
          "resolved": "Point",
          "references": {
            "Point": {
              "location": "import",
              "path": "../../../../classes/math-util"
            }
          }
        }
      }, {
        "method": "dragFinish",
        "name": "dragFinish",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [{
              "name": "internal",
              "text": "This event fires when the user stops to drags this component."
            }],
          "text": ""
        },
        "complexType": {
          "original": "Point",
          "resolved": "Point",
          "references": {
            "Point": {
              "location": "import",
              "path": "../../../../classes/math-util"
            }
          }
        }
      }, {
        "method": "dragUpdate",
        "name": "dragUpdate",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [{
              "name": "internal",
              "text": "This event fires while the user drags this component."
            }],
          "text": ""
        },
        "complexType": {
          "original": "Point",
          "resolved": "Point",
          "references": {
            "Point": {
              "location": "import",
              "path": "../../../../classes/math-util"
            }
          }
        }
      }];
  }
  static get elementRef() { return "self"; }
}
