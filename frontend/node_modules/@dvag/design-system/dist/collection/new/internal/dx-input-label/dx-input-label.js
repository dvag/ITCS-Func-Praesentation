import { h, Host } from "@stencil/core";
import { NewKiSyncIcon } from "../../functional/new-ki-snyc-icon";
/**
 * This Component is considered internal!
 * Do not use this component on your own!
 * This component can and will be changed without a warning!
 * @internal
 */
export class DxInputLabel {
  constructor() {
    /**
     * The font type.
     */
    this.type = "its";
    /**
     * If the label should be in an disabled state.
     */
    this.disabled = false;
    /**
     * Indicates whether an asterisk is displayed next to the label or not.
     */
    this.required = false;
    /**
     * Indicates when the data is synced to ki.
     */
    this.kisynced = false;
    /**
     * Aligns the icons in a compressed manner.
     */
    this.condensedlayout = false;
  }
  renderAsteriskIcon() {
    if (!this.required || !this.label) {
      return;
    }
    return (h("dx-icon", { class: "required-icon", size: 16, icon: "state-required", color: "gold" }));
  }
  renderKiSynced() {
    if (!this.kisynced) {
      return;
    }
    return (h("div", { class: {
        "condensed-layout": this.condensedlayout,
      } }, h(NewKiSyncIcon, null)));
  }
  render() {
    var _a, _b;
    return (h(Host, { style: {
        display: ((_a = this.label) === null || _a === void 0 ? void 0 : _a.length) > 0 ? "block" : "none",
      } }, h("div", { class: "label-container" }, h("dx-text", { type: (_b = this.type) !== null && _b !== void 0 ? _b : "its", class: { "label-text": true, disabled: this.disabled } }, this.label), h("div", { class: "required-container" }, this.renderAsteriskIcon()), h("div", { class: {
        "non-clickable-container": true,
        "condensed-layout": this.condensedlayout,
      }, onClick: (e) => {
        e.preventDefault();
      } }, this.renderKiSynced()))));
  }
  static get is() { return "dx-input-label"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["dx-input-label.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["dx-input-label.css"]
    };
  }
  static get properties() {
    return {
      "type": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The font type."
        },
        "attribute": "type",
        "reflect": false,
        "defaultValue": "\"its\""
      },
      "label": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The text that will be showed on top of a input."
        },
        "attribute": "label",
        "reflect": false
      },
      "disabled": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "If the label should be in an disabled state."
        },
        "attribute": "disabled",
        "reflect": false,
        "defaultValue": "false"
      },
      "required": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Indicates whether an asterisk is displayed next to the label or not."
        },
        "attribute": "required",
        "reflect": false,
        "defaultValue": "false"
      },
      "kisynced": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Indicates when the data is synced to ki."
        },
        "attribute": "kisynced",
        "reflect": false,
        "defaultValue": "false"
      },
      "condensedlayout": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Aligns the icons in a compressed manner."
        },
        "attribute": "condensedlayout",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
}
