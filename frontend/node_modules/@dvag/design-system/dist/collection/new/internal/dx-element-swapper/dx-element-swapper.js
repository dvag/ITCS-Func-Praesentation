import { h, Host } from "@stencil/core";
/**
 * @internal
 */
export class DxElementSwapper {
  constructor() {
    /**
     * Defines whether the first or the second slot is currently visible.
     *
     * @value first: First slot is visible.
     * @value second: Second slot is visible.
     * @value none: No slot is visible.
     */
    this.active = "first";
  }
  render() {
    return (h(Host, null, h("div", { class: {
        swappable: true,
        hidden: this.active !== "first",
      } }, h("slot", { name: "first" })), h("div", { class: {
        swappable: true,
        "overlap-parent": true,
        hidden: this.active !== "second",
      } }, h("slot", { name: "second" }))));
  }
  static get is() { return "dx-element-swapper"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["dx-element-swapper.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["dx-element-swapper.css"]
    };
  }
  static get properties() {
    return {
      "active": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "\"first\" | \"second\" | \"none\"",
          "resolved": "\"first\" | \"none\" | \"second\"",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "first: First slot is visible."
            }, {
              "name": "value",
              "text": "second: Second slot is visible."
            }, {
              "name": "value",
              "text": "none: No slot is visible."
            }],
          "text": "Defines whether the first or the second slot is currently visible."
        },
        "attribute": "active",
        "reflect": false,
        "defaultValue": "\"first\""
      }
    };
  }
}
