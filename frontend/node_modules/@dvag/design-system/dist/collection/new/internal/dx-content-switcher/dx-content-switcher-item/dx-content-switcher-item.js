import { h, Host } from "@stencil/core";
import { onNextFrame } from "../../../../classes/render-util";
/**
 * @internal
 */
export class DxContentSwitcherItem {
  constructor() {
    this.reverse = false;
    this.animatable = true;
  }
  onReverseChange() {
    // Prevents wobbling while initializing the content-switcher-items.
    this.reverse = this.reverse && this.animatable;
  }
  onStateChanged() {
    if (this.visible) {
      this.self.hidden = false;
      this.self.style.removeProperty("visibility");
    }
    onNextFrame(() => {
      this.internalVisible = this.visible;
    });
  }
  connectedCallback() {
    this.internalVisible = this.visible;
  }
  handleTransitionEnd(e) {
    if (e.target === this.self && e.propertyName === "flex-basis") {
      if (this.internalVisible) {
        // This is important to prevent the content from wobbling when the size of the window changes.
        this.reverse = false;
      }
      else {
        this.self.style.setProperty("visibility", "hidden");
      }
    }
  }
  render() {
    return (h(Host, { onTransitionEnd: (e) => this.handleTransitionEnd(e), class: {
        visible: this.internalVisible,
        animatable: this.animatable,
        reverse: this.reverse,
      } }, h("div", { class: "slot-wrapper" }, h("slot", null))));
  }
  static get is() { return "dx-content-switcher-item"; }
  static get encapsulation() { return "scoped"; }
  static get originalStyleUrls() {
    return {
      "$": ["dx-content-switcher-item.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["dx-content-switcher-item.css"]
    };
  }
  static get properties() {
    return {
      "reverse": {
        "type": "boolean",
        "mutable": true,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "reverse",
        "reflect": false,
        "defaultValue": "false"
      },
      "value": {
        "type": "any",
        "mutable": false,
        "complexType": {
          "original": "ContentSwitcherItemValue",
          "resolved": "number | string",
          "references": {
            "ContentSwitcherItemValue": {
              "location": "local"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "value",
        "reflect": false
      },
      "animatable": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "animatable",
        "reflect": false,
        "defaultValue": "true"
      },
      "visible": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "visible",
        "reflect": true
      }
    };
  }
  static get states() {
    return {
      "internalVisible": {}
    };
  }
  static get elementRef() { return "self"; }
  static get watchers() {
    return [{
        "propName": "reverse",
        "methodName": "onReverseChange"
      }, {
        "propName": "visible",
        "methodName": "onStateChanged"
      }];
  }
}
