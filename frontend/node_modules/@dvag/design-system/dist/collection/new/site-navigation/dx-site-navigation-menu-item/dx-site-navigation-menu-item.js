import { assertPropertyValue } from "../../../classes/assert";
import { SITE_NAVIGATION_STATE_ARRAY, } from "./states";
/**
 * Represents a single item within a site navigation menu. For examples see: [Site Navigation](#/component/dx-site-navigation)
 * @path Scaffold/Site Navigation/Menu
 * @name Menu item
 * @shortname Item
 * @icon minus
 * @stable
 * @slot - Up one additional level of children. There can not be more then a two-level hierarchy of items.
 */
export class DxSiteNavigationMenuItem {
  constructor() {
    /**
     * State of the content section represented by this menu item.
     * @value error: There is an error within content.
     * @value required: There is an essential information needed in order to continue.
     * @value success: Everything is okay within that section.
     * @value none: No state. (default value)
     */
    this.state = "none";
  }
  /**
   * @internal
   */
  async toMenuItemModel() {
    assertPropertyValue("dx-site-navigation-menu-item", "state", this.state, [
      ...SITE_NAVIGATION_STATE_ARRAY,
    ]);
    return {
      label: this.label,
      value: this.value,
      state: this.state,
    };
  }
  static get is() { return "dx-site-navigation-menu-item"; }
  static get encapsulation() { return "shadow"; }
  static get properties() {
    return {
      "label": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "String: label of the item."
            }],
          "text": "Label of the menu item that is displayed to the user."
        },
        "attribute": "label",
        "reflect": true
      },
      "state": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "SiteNavigationMenuItemState",
          "resolved": "\"error\" | \"none\" | \"required\" | \"success\"",
          "references": {
            "SiteNavigationMenuItemState": {
              "location": "import",
              "path": "./states"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "error: There is an error within content."
            }, {
              "name": "value",
              "text": "required: There is an essential information needed in order to continue."
            }, {
              "name": "value",
              "text": "success: Everything is okay within that section."
            }, {
              "name": "value",
              "text": "none: No state. (default value)"
            }],
          "text": "State of the content section represented by this menu item."
        },
        "attribute": "state",
        "reflect": true,
        "defaultValue": "\"none\""
      },
      "value": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "String: unique identifier."
            }],
          "text": "Unique value to identify this menu item. Use for interaction event handling\nor when using site navigation scopes."
        },
        "attribute": "value",
        "reflect": true
      }
    };
  }
  static get methods() {
    return {
      "toMenuItemModel": {
        "complexType": {
          "signature": "() => Promise<SiteNavigationMenuItem>",
          "parameters": [],
          "references": {
            "Promise": {
              "location": "global"
            },
            "SiteNavigationMenuItem": {
              "location": "local"
            }
          },
          "return": "Promise<SiteNavigationMenuItem>"
        },
        "docs": {
          "text": "",
          "tags": [{
              "name": "internal",
              "text": undefined
            }]
        }
      }
    };
  }
}
