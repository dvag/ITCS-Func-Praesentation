import { assert } from "./assert";
import { ColorMapDX } from "./color-palette-definition.generated";
export class ColorPalette {
  constructor(useNewColors = false) {
    this.useNewColors = useNewColors;
  }
  getColorCode(colorName) {
    const lowerCaseColor = colorName.toLowerCase();
    return this.useNewColors
      ? this.getDXColorCode(lowerCaseColor)
      : this.getDSColorCode(lowerCaseColor);
  }
  getDXColorCode(colorName) {
    const hexCode = getDXColorCode(colorName);
    assert(hexCode != null, () => this.getErrorMessage(colorName, getDXColorAliases()));
    return hexCode;
  }
  getDSColorCode(colorName) {
    const hexCode = getDSColorCode(colorName);
    assert(hexCode != null, () => this.getErrorMessage(colorName, getDSColorAliases()));
    return hexCode;
  }
  getErrorMessage(colorName, aliases) {
    return `There is no color with the name '${colorName}'. Possible names: \n${aliases.join("\n")}`;
  }
  getWheelColor(index) {
    return this.useNewColors
      ? getDXWheelColorAlias(index)
      : getDSWheelColorAlias(index);
  }
  getWheelColorCode(index) {
    return this.getColorCode(this.getWheelColor(index));
  }
}
const ColorMapDS = {
  "#a7893d": ["gold"],
  "#957b36": ["gold-mittel"],
  "#856D30": ["gold-dunkel"],
  "#E3DAC4": ["gold-hell"],
  "#ffffff": ["weiss"],
  "#424242": ["anthrazit"],
  "#4c4c4c": ["dunkelgrau-1"],
  "#666666": ["dunkelgrau-2"],
  "#7f7f7f": ["dunkelgrau-3"],
  "#EBEBEB": ["hellgrau-1"],
  "#DEDEDE": ["hellgrau-2"],
  "#C1C1C1": ["hellgrau-3"],
  "#F5F5F5": ["hellgrau-4"],
  "#004165": ["dunkelblau-1"],
  "#336783": ["dunkelblau-2"],
  "#668DA2": ["dunkelblau-3"],
  "#99B3C1": ["dunkelblau-4"],
  "#CCD9E0": ["dunkelblau-5"],
  "#BE1413": ["rot-1"],
  "#CB4342": ["rot-2"],
  "#D87271": ["rot-3"],
  "#E5A1A0": ["rot-4"],
  "#F2D0CF": ["rot-5"],
  "#3B94A3": ["petrol-1"],
  "#62A9B5": ["petrol-2"],
  "#89BEC7": ["petrol-3"],
  "#B0D4DA": ["petrol-4"],
  "#D7E9EC": ["petrol-5"],
  "#E8B50E": ["gelb-1"],
  "#ECC33E": ["gelb-2"],
  "#F1D26E": ["gelb-3"],
  "#F5E19E": ["gelb-4"],
  "#FAF0CE": ["gelb-5"],
  "#6EA318": ["gruen-1"],
  "#8BB546": ["gruen-2"],
  "#A8C774": ["gruen-3"],
  "#C5DAA2": ["gruen-4"],
  "#E2ECD0": ["gruen-5"],
};
const WHEEL_COLORS_DS = [
  "gold",
  "dunkelblau-1",
  "petrol-1",
  "gruen-1",
  "gelb-1",
  "rot-1",
  "gold-hell",
  "dunkelblau-3",
  "petrol-3",
  "gruen-3",
  "gelb-3",
  "rot-3",
  "dunkelblau-4",
  "petrol-4",
  "gruen-4",
  "gelb-4",
  "rot-4",
];
const WHEEL_COLORS_DX = ["gold", "default", "error", "warning"];
function getDXColorAliases() {
  return Object.values(ColorMapDX)
    .flat()
    .map((alias) => alias);
}
function getDXColorCode(color) {
  return Object.keys(ColorMapDX).find((hexCode) => {
    return ColorMapDX[hexCode].includes(color);
  });
}
function getDXWheelColorAlias(index) {
  return WHEEL_COLORS_DX[index];
}
function getDSColorAliases() {
  return Object.values(ColorMapDS)
    .flat()
    .map((alias) => alias);
}
function getDSColorCode(color) {
  return Object.keys(ColorMapDS).find((hexCode) => {
    return ColorMapDS[hexCode].includes(color);
  });
}
function getDSWheelColorAlias(index) {
  return WHEEL_COLORS_DS[index];
}
