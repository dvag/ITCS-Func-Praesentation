import { Point } from "./math-util";
export class PositionObserver {
  constructor(elementRef, callback) {
    this.elementRef = elementRef;
    this.callback = callback;
    this.endLoop = false;
    this.position = null;
    this.windowEvents = ["scroll", "resize"];
    this.onWindowChangeEvent = () => this.detectChanges();
    this.windowEvents.forEach((evt) => {
      window.addEventListener(evt, this.onWindowChangeEvent);
    });
    if (elementRef) {
      this.position = new Point(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER);
      this.checkLoop();
    }
  }
  checkLoop() {
    if (!this.endLoop) {
      this.detectChanges();
      setTimeout(() => this.checkLoop(), 200);
    }
  }
  detectChanges() {
    if (this.elementRef == null) {
      return;
    }
    const boundingClientRect = this.elementRef.getBoundingClientRect();
    if (boundingClientRect.left !== this.position.x ||
      boundingClientRect.top !== this.position.y) {
      this.position.x = boundingClientRect.left;
      this.position.y = boundingClientRect.top;
      this.callback(this.position.copy());
    }
  }
  disconnect() {
    this.endLoop = true;
    this.elementRef = null;
    this.position = null;
    this.windowEvents.forEach((evt) => {
      window.removeEventListener(evt, this.onWindowChangeEvent);
    });
  }
}
