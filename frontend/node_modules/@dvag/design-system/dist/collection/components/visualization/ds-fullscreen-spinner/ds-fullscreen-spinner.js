import { h, Host, } from "@stencil/core";
import { ModalScrollHelper } from "../../../classes/modal-scroll-helper";
/**
 * A loading indicator which overlays over the whole site.
 * As long as it is visible all keyboard will be canceled.
 *
 * @name Fullscreen loading indicator
 * @shortname Fullscreen
 * @path /Visualization/Spinner
 * @icon spinner
 * @stable
 */
export class DsFullscreenSpinner {
  connectedCallback() {
    var _a;
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    this.mutationObserver = new MutationObserver(() => this.handleBlocking());
    this.mutationObserver.observe(this.self, { attributes: true });
  }
  disconnectedCallback() {
    var _a;
    ModalScrollHelper.instance().unblock(this.self);
    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
  }
  preventInputIfVisible(e) {
    if (this.isVisible) {
      e.preventDefault();
      e.stopPropagation();
      e.stopImmediatePropagation();
    }
  }
  get isVisible() {
    return getComputedStyle(this.self).display !== "none";
  }
  onKeyDown(e) {
    this.preventInputIfVisible(e);
  }
  onKeyUp(e) {
    this.preventInputIfVisible(e);
  }
  handleBlocking() {
    const scrollHelper = ModalScrollHelper.instance();
    if (this.isVisible) {
      scrollHelper.block(this.self, null);
    }
    else {
      scrollHelper.unblock(this.self);
    }
  }
  render() {
    return (h(Host, null, h("ds-spinner", { size: "large", theme: "dark", animationduration: 1500 })));
  }
  static get is() { return "ds-fullscreen-spinner"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["ds-fullscreen-spinner.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["ds-fullscreen-spinner.css"]
    };
  }
  static get elementRef() { return "self"; }
  static get listeners() {
    return [{
        "name": "keydown",
        "method": "onKeyDown",
        "target": "window",
        "capture": true,
        "passive": false
      }, {
        "name": "keyup",
        "method": "onKeyUp",
        "target": "window",
        "capture": true,
        "passive": false
      }];
  }
}
