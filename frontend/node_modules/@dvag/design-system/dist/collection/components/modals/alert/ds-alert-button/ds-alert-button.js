/**
 * A meta element for describing a button within a `<ds-alert>` context.
 *
 * @name Alert-Button
 * @shortname Button
 * @path /Modals/Alert
 * @icon minus-square
 * @stable
 */
export class DsAlertButton {
  constructor() {
    /**
     * Label color.
     *
     * @value red: rot
     * @value gold: gold
     */
    this.color = "gold";
  }
  /**
   * Extracts this element's properties into a complex javascript object.
   *
   * @internal
   */
  async toAlertButtonData() {
    var _a;
    return {
      label: this.label,
      value: (_a = this.value) !== null && _a !== void 0 ? _a : this.label,
      confirm: this.confirm,
      color: this.color,
      highlight: this.highlight,
      disabled: this.disabled,
      onClick: this.click.bind(this),
    };
  }
  click() {
    this.self.click();
  }
  static get is() { return "ds-alert-button"; }
  static get encapsulation() { return "shadow"; }
  static get properties() {
    return {
      "label": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: Text"
            }],
          "text": "Button label."
        },
        "attribute": "label",
        "reflect": true
      },
      "value": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: Identifier text."
            }],
          "text": "Unique identifier of this component within a `<ds-alert>` element."
        },
        "attribute": "value",
        "reflect": true
      },
      "confirm": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "true: When typing 'Enter' this button is selected when no other element is in focus."
            }, {
              "name": "value",
              "text": "false: This button can only be interacted with by clicking or explicitly focusing the corresponding button in the upper `<ds-alert>` element."
            }],
          "text": "Indicates whether this button confirms the upper `<ds-alert>` element."
        },
        "attribute": "confirm",
        "reflect": true
      },
      "highlight": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": true,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "true: Bold label font."
            }, {
              "name": "value",
              "text": "false: Default label font."
            }],
          "text": "The label is displayed with a bold font."
        },
        "attribute": "highlight",
        "reflect": true
      },
      "disabled": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "false: Button is interactable."
            }, {
              "name": "value",
              "text": "true: Button is disabled."
            }],
          "text": "Disables the interaction with the corresponding button of this element."
        },
        "attribute": "disabled",
        "reflect": true
      },
      "color": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "\"gold\" | \"rot\"",
          "resolved": "\"gold\" | \"rot\"",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "red: rot"
            }, {
              "name": "value",
              "text": "gold: gold"
            }],
          "text": "Label color."
        },
        "attribute": "color",
        "reflect": true,
        "defaultValue": "\"gold\""
      }
    };
  }
  static get methods() {
    return {
      "toAlertButtonData": {
        "complexType": {
          "signature": "() => Promise<AlertButtonData>",
          "parameters": [],
          "references": {
            "Promise": {
              "location": "global"
            },
            "AlertButtonData": {
              "location": "local"
            }
          },
          "return": "Promise<AlertButtonData>"
        },
        "docs": {
          "text": "Extracts this element's properties into a complex javascript object.",
          "tags": [{
              "name": "internal",
              "text": undefined
            }]
        }
      }
    };
  }
  static get elementRef() { return "self"; }
}
