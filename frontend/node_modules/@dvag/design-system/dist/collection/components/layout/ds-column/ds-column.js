import { h, Host } from "@stencil/core";
import { assertPropertyValue } from "../../../classes/assert";
/**
 * Ordnet Elemente untereinander an.
 *
 * @path /Layout
 * @name Column
 * @icon align-justify
 * @stable
 * @slot - Elemente, die untereinander angeordnet werden sollen.
 */
export class DsColumn {
  constructor() {
    /**
     * Gibt an, welche Ausrichtung die Elemente haben sollen.
     * @value string: left
     * @value string: center
     * @value string: right
     * @value string: stretch
     * @example example
     */
    this.align = "left";
  }
  render() {
    assertPropertyValue("ds-column", "align", this.align, [
      "left",
      "center",
      "right",
      "stretch",
    ]);
    return (h(Host, null, h("div", { class: "column", style: { "align-items": this.getAlignment() } }, h("slot", null))));
  }
  getAlignment() {
    return alignments[this.align];
  }
  static get is() { return "ds-column"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["ds-column.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["ds-column.css"]
    };
  }
  static get properties() {
    return {
      "align": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "\"left\" | \"center\" | \"right\" | \"stretch\"",
          "resolved": "\"center\" | \"left\" | \"right\" | \"stretch\"",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: left"
            }, {
              "name": "value",
              "text": "string: center"
            }, {
              "name": "value",
              "text": "string: right"
            }, {
              "name": "value",
              "text": "string: stretch"
            }, {
              "name": "example",
              "text": "example"
            }],
          "text": "Gibt an, welche Ausrichtung die Elemente haben sollen."
        },
        "attribute": "align",
        "reflect": false,
        "defaultValue": "\"left\""
      }
    };
  }
}
const alignments = {
  center: "center",
  left: "flex-start",
  right: "flex-end",
  stretch: "stretch",
};
