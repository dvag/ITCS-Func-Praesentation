import { h, Host } from "@stencil/core";
import { assertPropertyValueByPredicate } from "../../../classes/assert";
/**
 * Eine Komponente, die, mithilfe der `ds-centered-board-item`-Komponente, ihre Unterelemente in mehrere Spalten unterteilt.
 *
 * @path /Layout
 * @name Centered-Board
 * @shortname Centered-Board
 * @icon align-center
 * @stable
 * @slot - `ds-centered-board-item`-Elemente, die in Spalten unterteilt werden sollen.
 */
export class DsCenteredBoard {
  render() {
    var _a;
    assertPropertyValueByPredicate("ds-centered-board", "columns", (_a = this.columns) === null || _a === void 0 ? void 0 : _a.toString(), () => {
      return this.columns > 0;
    }, "Der Wert muss größer als 0 betragen.");
    return (h(Host, { style: {
        "--ds-columns": this.columns.toString(),
      } }, h("slot", null)));
  }
  static get is() { return "ds-centered-board"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["ds-centered-board.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["ds-centered-board.css"]
    };
  }
  static get properties() {
    return {
      "columns": {
        "type": "number",
        "mutable": false,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "number: Eine Zahl, die gr\u00F6\u00DFer 0 sein muss."
            }],
          "text": "Die maximale Anzahl an Spalten in die die einzelnen Reihen aufgespalten werden sollen."
        },
        "attribute": "columns",
        "reflect": false
      }
    };
  }
}
