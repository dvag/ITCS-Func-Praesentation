import { Host, h } from "@stencil/core";
import { randomId } from "../../../classes/id-util";
import { assert } from "../../../classes/assert";
/**
 * Represents one tab and it's content within a `<ds-card-tab-bar>` element.
 *
 * @path /Card/Tabs
 * @name Card Tab-Page
 * @shortname Page
 * @icon file-alt
 * @stable
 *
 * @slot - The content which is displayed when this tab page is selected.
 */
export class DsCardTabPage {
  constructor() {
    /**
     * Unique identifier of this component within a `<ds-card-tab-bar>` element.
     * The content will be visible when the corresponding `<ds-card-tab-bar>` element's `show` property value equals the `name`.
     *
     * If no value is specified a random id will be generated.
     *
     * @value string: Identifier
     * @example ohne-name
     */
    this.name = randomId();
  }
  render() {
    var _a;
    assert(((_a = this.label) === null || _a === void 0 ? void 0 : _a.length) > 0, () => "<ds-card-tab-page> needs a title by setting the 'label' property");
    return (h(Host, null, h("slot", null)));
  }
  static get is() { return "ds-card-tab-page"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["ds-card-tab-page.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["ds-card-tab-page.css"]
    };
  }
  static get properties() {
    return {
      "label": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: The label"
            }],
          "text": "The text which is displayed in the tab."
        },
        "attribute": "label",
        "reflect": false
      },
      "name": {
        "type": "string",
        "mutable": true,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: Identifier"
            }, {
              "name": "example",
              "text": "ohne-name"
            }],
          "text": "Unique identifier of this component within a `<ds-card-tab-bar>` element.\nThe content will be visible when the corresponding `<ds-card-tab-bar>` element's `show` property value equals the `name`.\n\nIf no value is specified a random id will be generated."
        },
        "attribute": "name",
        "reflect": true,
        "defaultValue": "randomId()"
      }
    };
  }
}
