import { Host, h, } from "@stencil/core";
/**
 * @internal
 */
export class DsBlink {
  constructor() {
    this.height = 50;
    this.auto = false;
    this.time = 2000;
    this.color = "yellow";
  }
  componentWillLoad() {
    if (this.auto) {
      setInterval(() => this.newHeight(), this.time * 3);
    }
  }
  newHeight() {
    return (this.height = 20 + Math.round(Math.random() * 300));
  }
  render() {
    return (h(Host, { onClick: () => this.newHeight(), style: {
        height: `${this.height}px`,
        background: this.color,
      } }, h("slot", null)));
  }
  static get is() { return "ds-blink"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["ds-blink.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["ds-blink.css"]
    };
  }
  static get properties() {
    return {
      "auto": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "auto",
        "reflect": false,
        "defaultValue": "false"
      },
      "time": {
        "type": "number",
        "mutable": false,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "time",
        "reflect": false,
        "defaultValue": "2000"
      },
      "color": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "color",
        "reflect": false,
        "defaultValue": "\"yellow\""
      }
    };
  }
  static get states() {
    return {
      "height": {}
    };
  }
}
