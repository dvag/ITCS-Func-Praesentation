import { Host, h, } from "@stencil/core";
/**
 * A table row which represents a data object within an array.
 * It renders `<ds-table-cell>` components in a row.
 *
 * @path /Table
 * @name Table Row
 * @shortname Row
 * @icon grip-lines
 * @stable
 *
 */
export class DsTableRow {
  constructor() {
    /**
     * @internal
     */
    this.visible = true;
  }
  onRowSelected() {
    this.rowSelected.emit(this.selected);
  }
  render() {
    return (h(Host, { class: {
        visible: this.visible,
      }, role: "row" }, h("slot", null)));
  }
  static get is() { return "ds-table-row"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["ds-table-row.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["ds-table-row.css"]
    };
  }
  static get properties() {
    return {
      "visible": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "internal",
              "text": undefined
            }],
          "text": ""
        },
        "attribute": "visible",
        "reflect": true,
        "defaultValue": "true"
      },
      "rowid": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: Unique identifier"
            }],
          "text": "A unique identifier for the data this row displays in a table."
        },
        "attribute": "rowid",
        "reflect": true
      },
      "selected": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "true: Row is selected."
            }, {
              "name": "value",
              "text": "false: Row is not selected."
            }, {
              "name": "example",
              "text": "selection"
            }],
          "text": "Selects this row.\nIf true the row will be selected and the table's selection will be enabled."
        },
        "attribute": "selected",
        "reflect": true
      }
    };
  }
  static get events() {
    return [{
        "method": "rowSelected",
        "name": "rowSelected",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "boolean: Row is selected or not."
            }],
          "text": "Fired when the selection-status of the row is changed."
        },
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        }
      }];
  }
  static get watchers() {
    return [{
        "propName": "selected",
        "methodName": "onRowSelected"
      }];
  }
}
