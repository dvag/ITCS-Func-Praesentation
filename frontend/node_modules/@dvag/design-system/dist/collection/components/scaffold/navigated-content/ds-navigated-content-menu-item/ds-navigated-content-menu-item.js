/**
 * Entry used within an `ds-navigated-content-menu`.
 *
 * @name Site navigation base entry
 * @shortname Entry
 * @path /Scaffold/Site navigation/Menu
 * @icon minus
 * @stable
 */
export class DsNavigatedContentMenuItem {
  constructor() {
    /**
     * Attaches an error-marker.
     * @value true: Error-marker displayed.
     * @value false: No error-marker displayed.
     */
    this.error = false;
    /**
     * Attaches an warn-marker.
     * @value true: Marker displayed.
     * @value false: No Marker displayed.
     */
    this.warning = false;
    /**
     * Attaches a success-marker.
     *
     * @value true: Marker displayed.
     * @value false: No Marker displayed.
     */
    this.success = false;
  }
  /**
   * @internal
   */
  async toMenuItemModel() {
    return {
      label: this.label,
      value: this.value,
      error: this.error,
      warning: this.warning,
      success: this.success,
    };
  }
  static get is() { return "ds-navigated-content-menu-item"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["ds-navigated-content-menu-item.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["ds-navigated-content-menu-item.css"]
    };
  }
  static get properties() {
    return {
      "label": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: description."
            }],
          "text": "Visible label of this entry."
        },
        "attribute": "label",
        "reflect": false
      },
      "value": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: Internal representation"
            }],
          "text": "Internal representation of this item which is used for the active path of this Entry."
        },
        "attribute": "value",
        "reflect": false
      },
      "error": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "true: Error-marker displayed."
            }, {
              "name": "value",
              "text": "false: No error-marker displayed."
            }],
          "text": "Attaches an error-marker."
        },
        "attribute": "error",
        "reflect": false,
        "defaultValue": "false"
      },
      "warning": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "true: Marker displayed."
            }, {
              "name": "value",
              "text": "false: No Marker displayed."
            }],
          "text": "Attaches an warn-marker."
        },
        "attribute": "warning",
        "reflect": false,
        "defaultValue": "false"
      },
      "success": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "true: Marker displayed."
            }, {
              "name": "value",
              "text": "false: No Marker displayed."
            }],
          "text": "Attaches a success-marker."
        },
        "attribute": "success",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get methods() {
    return {
      "toMenuItemModel": {
        "complexType": {
          "signature": "() => Promise<MenuItemModel>",
          "parameters": [],
          "references": {
            "Promise": {
              "location": "global"
            },
            "MenuItemModel": {
              "location": "local"
            }
          },
          "return": "Promise<MenuItemModel>"
        },
        "docs": {
          "text": "",
          "tags": [{
              "name": "internal",
              "text": undefined
            }]
        }
      }
    };
  }
}
