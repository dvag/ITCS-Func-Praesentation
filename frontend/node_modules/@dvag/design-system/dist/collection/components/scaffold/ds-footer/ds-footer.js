import { h, Host } from "@stencil/core";
// TODO docu: anmerken, dass es unterkomponente von App sein muss
// TODO: example in kombination mit ds-app
// TODO an niklas => link-ziele erfragen? pro app unterschiedlich?
// TODO idee: prop "customlinks", wenn auf true, wird customClick event gefeuert?
/**
 * Always displayed at the bottom of the Page. And contains several links for `terms of use`,`privacy protection` etc.
 *
 * You can find usage examples [here](assets/examples/old_VSP-Seite1.html).
 *
 * @path /Scaffold
 * @name App-Footer
 * @shortname Footer
 * @icon shoe-prints
 */
export class DsFooter {
  constructor() {
    /**
     * Defines the visibility of "Nutzungsbedingungen".
     *
     * @value true: shows "Nutzungsbedinungen".
     * @value false: hides "Nutzungsbedinungen".
     *
     * @example show-terms-of-use
     */
    this.showtermsofuse = true;
    /**
     * Defines the visibility of "Impressum".
     *
     * @value true: shows "Impressum".
     * @value false: hides "Impressum".
     *
     * @example show-imprint
     */
    this.showimprint = true;
  }
  renderInfoLabels() {
    const infoLabels = [PRIVACY_BUTTON_LABEL];
    if (this.showtermsofuse) {
      infoLabels.unshift(TERMS_OF_USE_BUTTON_LABEL);
    }
    if (this.showimprint) {
      infoLabels.push(IMPRINT_BUTTON_LABEL);
    }
    return infoLabels.map((infoButtonLabel) => (h("ds-text-button", { id: `ds-footer-${infoButtonLabel}`, onClick: () => this.infoButtonClicked.emit(infoButtonLabel) }, h("ds-text", { type: "itk" }, infoButtonLabel))));
  }
  render() {
    return (h(Host, null, h("div", { class: "footer-bar" }, h("div", { class: "content page-wrapped-content" }, h("ds-text", { type: "itk", color: "hellgrau-3" }, this.companyinfo), h("div", { class: "link-container" }, this.renderInfoLabels())))));
  }
  static get is() { return "ds-footer"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["ds-footer.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["ds-footer.css"]
    };
  }
  static get properties() {
    return {
      "companyinfo": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: the information"
            }, {
              "name": "example",
              "text": "company-info"
            }],
          "text": "Company informations (e.g: \u00A9 2019 Deutsche Verm\u00F6gensberatung)"
        },
        "attribute": "companyinfo",
        "reflect": false
      },
      "showtermsofuse": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "true: shows \"Nutzungsbedinungen\"."
            }, {
              "name": "value",
              "text": "false: hides \"Nutzungsbedinungen\"."
            }, {
              "name": "example",
              "text": "show-terms-of-use"
            }],
          "text": "Defines the visibility of \"Nutzungsbedingungen\"."
        },
        "attribute": "showtermsofuse",
        "reflect": false,
        "defaultValue": "true"
      },
      "showimprint": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "true: shows \"Impressum\"."
            }, {
              "name": "value",
              "text": "false: hides \"Impressum\"."
            }, {
              "name": "example",
              "text": "show-imprint"
            }],
          "text": "Defines the visibility of \"Impressum\"."
        },
        "attribute": "showimprint",
        "reflect": false,
        "defaultValue": "true"
      }
    };
  }
  static get events() {
    return [{
        "method": "infoButtonClicked",
        "name": "infoButtonClicked",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [{
              "name": "example",
              "text": "info-button-event"
            }],
          "text": "This event is fired when the user clicks on an information button. The event holds the information about which button is clicked."
        },
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        }
      }];
  }
}
const IMPRINT_BUTTON_LABEL = "Impressum";
const TERMS_OF_USE_BUTTON_LABEL = "Nutzungsbedingungen";
const PRIVACY_BUTTON_LABEL = "Datenschutz";
