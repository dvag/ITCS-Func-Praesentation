import { h, Host, } from "@stencil/core";
import { HeaderService, subscribeToHeaderHeight, } from "../ds-header/header-service";
/**
 * Sticky bar that stays on top below the header.
 * @name Announcement bar
 * @shortname Announcement
 * @path /Scaffold
 * @slot - Content of the announcement bar
 * @icon bullhorn
 */
export class DsAnnouncementBar {
  connectedCallback() {
    this.headerHeightSubscription = subscribeToHeaderHeight((height) => (this.headerHeight = height));
    this.resizeObserver = new ResizeObserver(() => {
      HeaderService.instance().reserveHeightFor(this.self, this.self.offsetHeight);
    });
    this.resizeObserver.observe(this.self);
  }
  disconnectedCallback() {
    var _a;
    (_a = this.headerHeightSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();
    HeaderService.instance().freeHeightFor(this.self);
  }
  render() {
    return (h(Host, { style: { top: `${this.headerHeight}px` } }, h("ds-page", null, h("slot", null))));
  }
  static get is() { return "ds-announcement-bar"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["ds-announcement-bar.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["ds-announcement-bar.css"]
    };
  }
  static get states() {
    return {
      "headerHeight": {}
    };
  }
  static get elementRef() { return "self"; }
}
