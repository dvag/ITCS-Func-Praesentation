import { Host, h } from "@stencil/core";
import { assert } from "../../../classes/assert";
/**
 * @path /Scaffold
 * @name Workflow Fortschritt
 * @shortname Workflow
 * @icon spinner
 */
export class DsWorkflowProgress {
  constructor() {
    this.progress = 0;
  }
  render() {
    assert(this.progress >= 0 && this.progress <= 1, () => "<ds-workflow-progress> Die Eigenschaft 'progress' muss zwischen 0.0 und 1.0 liegen.");
    return (h(Host, null, h("div", { class: "progress", style: {
        transform: `scaleX(${Math.max(0, Math.min(this.progress, 1))})`,
      } })));
  }
  static get is() { return "ds-workflow-progress"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["ds-workflow-progress.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["ds-workflow-progress.css"]
    };
  }
  static get properties() {
    return {
      "progress": {
        "type": "number",
        "mutable": false,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "progress",
        "reflect": false,
        "defaultValue": "0"
      }
    };
  }
}
