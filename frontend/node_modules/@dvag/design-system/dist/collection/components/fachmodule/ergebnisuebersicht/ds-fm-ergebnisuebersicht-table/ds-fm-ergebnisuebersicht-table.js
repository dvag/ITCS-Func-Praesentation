import { notHidden } from "../../../../classes/query-util";
/**
 * @path /Specialized/Erg.-Übersicht
 * @name Ergebnisübersicht-Tabelle
 * @shortname Tabelle
 * @icon database
 *
 */
export class DsFmErgebnisuebersichtTable {
  /**
   * @internal
   * Creates a js object out of this table.
   */
  async toErgebnisUebersichtTable() {
    const items = Array.from(this.self.querySelectorAll(notHidden("ds-fm-ergebnisuebersicht-item"))).map((item) => item.toErgebnisUebersichtItem());
    return {
      label: this.label,
      items: await Promise.all(items),
    };
  }
  static get is() { return "ds-fm-ergebnisuebersicht-table"; }
  static get encapsulation() { return "shadow"; }
  static get properties() {
    return {
      "label": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [{
              "name": "value",
              "text": "string: e.g a product name"
            }],
          "text": "Label, displayed within the chart and the table."
        },
        "attribute": "label",
        "reflect": true
      }
    };
  }
  static get methods() {
    return {
      "toErgebnisUebersichtTable": {
        "complexType": {
          "signature": "() => Promise<ErgebnisUebersichtTable>",
          "parameters": [],
          "references": {
            "Promise": {
              "location": "global"
            },
            "ErgebnisUebersichtTable": {
              "location": "local"
            },
            "HTMLDsFmErgebnisuebersichtItemElement": {
              "location": "global"
            }
          },
          "return": "Promise<ErgebnisUebersichtTable>"
        },
        "docs": {
          "text": "",
          "tags": [{
              "name": "internal",
              "text": "Creates a js object out of this table."
            }]
        }
      }
    };
  }
  static get elementRef() { return "self"; }
}
