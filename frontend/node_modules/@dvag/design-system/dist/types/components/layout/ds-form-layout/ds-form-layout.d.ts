export declare type GridSize = "s" | "l" | "xl";
/**
 * A layout component that can render a form element within a one, two or three column grid.
 * It's mainly used within a `<ds-card>` component.
 *
 * @path /Layout
 * @name Form-Layout
 *
 * @slot label - Area for the form label.
 * @slot interaction - Area for the form control.
 *
 * @example example
 */
export declare class DsFormLayout {
  self: HTMLDsFormLayoutElement;
  /**
   * Amount of white space (%) on the right side.
   * Has no impact if `size` is set to `xl`.
   */
  private whitespace;
  /**
   * Amount of space (%) of interaction area. From this value the whitespace value is subtracted.
   * Has no impact if `size` is `l` or `xl`.
   */
  private interaction;
  private breakpointAware;
  internalSize: GridSize;
  /**
   * Defines the size layout of the shown elements.
   *
   * @value s: Small elements in a three column layout.
   * @value l: Medium-sized elements in a two column layout.
   * @value xl: A large element in a single column layout.
   *
   * @example size-s
   * @example size-l
   * @example size-xl
   */
  size: GridSize;
  onSizeChange(): void;
  connectedCallback(): void;
  disconnectedCallback(): void;
  componentWillLoad(): void;
  private computeInternalSize;
  private getGridColumn;
  private buildCssGridStyle;
  private renderSlotDependantOfSize;
  private renderInteractionSlot;
  private renderLabelSlot;
  render(): any;
}
