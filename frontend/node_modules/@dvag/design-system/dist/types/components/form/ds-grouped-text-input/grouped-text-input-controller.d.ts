import { InputGroup } from "./input-group";
export declare class GroupedTextInputController {
  private inputGroup;
  private inputElement;
  private lastValue;
  private caretPosition;
  onOverflow?: (data: OverflowData) => void;
  onGotoGroup?: (ic: GroupedTextInputController, previous: boolean) => void;
  onValueChanged: () => void;
  onDeleteEvent: (self: GroupedTextInputController, inputType: string) => void;
  constructor(inputGroup: InputGroup);
  setInputElement(el: HTMLInputElement): void;
  getInputGroup(): InputGroup;
  getInputElement(): HTMLInputElement;
  getInputValue(): string;
  extractCharacters(amount: number, inputType: string): string;
  appendExtractedToValue(toBeSet: string, inputType: string): void;
  clearInput(): void;
  checkIsFulfilled(): boolean;
  focus(): void;
  focusAndSetCaretPosition(selectionStart: number, selectionEnd: number): void;
  private saveCurrentValue;
  private resetToLastValue;
  private checkPreventInput;
  onInput(e: InputEvent): void;
  private handleOverflow;
  private handlePaste;
  private handleDeleteEvent;
  private shouldPrefixValue;
  private acceptPasteOrReset;
  private isDeleteEvent;
  handleKeyDown(event: KeyboardEvent): void;
  checkPattern(actualValue: string): boolean;
  private inputInNextGroupedInput;
  private focusPrevController;
  private focusNextController;
  handleArrowKey(e: KeyboardEvent): void;
  onBlur(): void;
  private recomputeTextInputWidth;
}
export interface OverflowData {
  data: string;
  input: GroupedTextInputController;
  paste: boolean;
  shouldPrefix: boolean;
  focusNext: boolean;
  caretPosition: number;
}
