import { ComponentInterface } from "../../../stencil-public-runtime";
/**
 * Box to wrap form elements. All elements have the same width.
 *
 * Every child element must be wrapped in a `<ds-bordered-form-item>`.
 *
 * @path /Form/Layout
 * @name Bordered Form Group
 * @shortname Bordered
 * @stable
 */
export declare class DsBorderedFormGroup implements ComponentInterface {
  private slotObserver;
  private nodes;
  private wrapperElement;
  private blurTimeout;
  self: HTMLDsBorderedFormGroupElement;
  currentFocusedIndex: number;
  containsRequiredField: boolean;
  /**
   * The direction the elements are aligned.
   *
   * @value row: Elements are displayed in a row
   * @value column: Elements are displayed in a column
   * @example column
   * @example row
   */
  direction: "row" | "column";
  onDirectionChange(): void;
  /**
   * The way how the component computes the width of the child elements.
   *
   * @value parent: Fits the width of the parent element.
   * @value max-content: The largest child element defines the width.
   *
   * @example size-parent
   */
  size: "parent" | "max-content";
  /**
   * @internal
   */
  requirementfulfilled: boolean;
  /**
   * @internal
   */
  errormessage?: string;
  internalRequirementFulfilled: boolean;
  onRequirementFulfilled(): void;
  connectedCallback(): Promise<void> | void;
  disconnectedCallback(): void;
  onChildWidthChanged(e: Event): void;
  private blurCurrent;
  private focusElement;
  private refreshWidth;
  private computeBorders;
  private getRequiredNodes;
  private isRequirementFulfilled;
  render(): any;
}
