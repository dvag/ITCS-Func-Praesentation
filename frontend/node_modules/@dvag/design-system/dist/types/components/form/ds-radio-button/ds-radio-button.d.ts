import { ComponentInterface } from "../../../stencil-public-runtime";
/**
 * A radio button representing an option inside a `<ds-radio-button-group>` element.
 *
 * @path /Form/Radio
 * @name Radio-Button
 * @shortname Button
 * @icon check-circle
 * @stable
 *
 */
export declare class DsRadioButton implements ComponentInterface {
  private inputElement;
  self: HTMLDsRadioButtonElement;
  /**
   * Identifier of this option. When selected this value overwrites the `<ds-radio-button-group>`'s value.
   *
   * @value string: The identifier of this option.
   * @example value
   */
  value: string;
  /**
   * Disables the ability to interact with this component.
   *
   * @value false: User can interact with this component.
   * @value true: User cannot interact with this component.
   *
   * @example modes
   */
  disabled: boolean;
  /**
   * A text which is displayed in an error popup below the component.
   * @value string: Error text
   *
   * @important
   */
  errormessage?: string;
  /**
   * Sets the error state on the group.
   *
   * @value true: An error exists.
   * @value false: No error exists.
   */
  error: boolean;
  /**
   * Text, which is displayed next to the radio button.
   *
   * @important
   * @value string: Label text.
   * @example label
   */
  label?: string;
  checked: boolean;
  mouseOver: boolean;
  hasFocus: boolean;
  /**
   * @internal
   */
  internalSetChecked(checked: boolean): Promise<void>;
  /**
   * Sets the focus on this component.
   * @example focus
   */
  focusControl(): Promise<void>;
  componentWillLoad(): Promise<void> | void;
  private get showLabel();
  private select;
  private group;
  render(): any;
  private renderLabel;
}
