import { ComponentInterface } from "../../../stencil-public-runtime";
import { ColumnSettings } from "../table-common-types";
/**
 * @path /Table
 * @name Table Cell
 * @shortname Cell
 * @icon border-all
 * @stable
 */
export declare class DsTableCell implements ComponentInterface {
  self: HTMLDsTableCellElement;
  /**
   * The value of this cell. It will be formatted depending the cell `type`.
   * @value string: Ein beliebiger Wert
   */
  value?: string;
  /**
   * The type of this cell.
   * If not explicity set the cell inherits the type by the corresponding `<ds-table-header-item>`.
   *
   *  @value text: The `value` is a string which will be rendered as text.
   *  It is defaultly left aligned.
   *
   * @value numeric: The `value` is a number which will be rendered as text.
   * It is defaultly right aligned.
   *
   * @value date:  The `value` is a string ('YYYY-mm-dd') which will be formatted as a date string.
   * It is defaultly left aligned.
   *
   * @value currency: The `value` is a number which will be formatted as a currency string (e.g: 1.120,00 â‚¬).
   * The currency itself is rendered as an icon.
   * It is defaultly right aligned.
   *
   * @value html: The default slot will be rendered in place of the `value`.
   */
  type: string;
  /**
   * The background color.
   * @value string: A color which has to be defined within the color palette of the design system. (e.g.: dunkelblau-4)
   */
  color: string;
  settings: ColumnSettings;
  tooltipText: string;
  /**
   * @internal
   */
  obtainSettings(settings: ColumnSettings): Promise<void>;
  private getInnerElement;
  private renderCellText;
  private setTooltipText;
  showTooltip: boolean;
  private handleTouchEnd;
  onTouchEnd(e: TouchEvent): void;
  private getStyle;
  render(): any;
}
