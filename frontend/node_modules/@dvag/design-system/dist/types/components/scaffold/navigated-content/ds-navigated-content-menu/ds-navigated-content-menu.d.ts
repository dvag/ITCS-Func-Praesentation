import { ComponentInterface, EventEmitter } from "../../../../stencil-public-runtime";
import { MenuItemModel } from "../ds-navigated-content-menu-item/ds-navigated-content-menu-item";
/**
 * @name Site navigation base menu
 * @shortname Menu
 * @path /Scaffold/Site navigation
 * @slot bottom - Additional content under the menu within the menu-card.
 * @icon bars
 * @stable
 */
export declare class DsNavigatedContentMenu implements ComponentInterface {
  private knobs;
  private menuItemObserver;
  private contentHeightBelowHeaderSubscription;
  private headerHeightSubscription;
  private resizeObserver;
  self: HTMLDsNavigatedContentMenuElement;
  menuItems: MenuItem[];
  headerHeight: number;
  contentBelowHeaderHeight: number;
  childrenBoxHeights: ChildrenBoxHeight[];
  /**
   * Description of the path of active menus.
   * @value string: Path e.g. `"Toplevel"` or `"Toplevel/sublevel"`
   */
  active: string;
  /**
   * Is triggered if an user interacts with the menu entries.
   * The event detail contains following data structure: `{path: 'toplevel/sublevel', segments: ['toplevel', 'sublevel']}`
   */
  navigate: EventEmitter<NavigatedRoute>;
  connectedCallback(): void;
  disconnectedCallback(): void;
  componentWillLoad(): Promise<void> | void;
  private updateKnobPositions;
  private registerMenuItemObserver;
  private measureChildrenBoxes;
  private pathForItem;
  private registerKnob;
  private navigateToItem;
  render(): any;
  private renderMenuItem;
  private renderItemChildren;
  private renderItemChildrenMeasurementBox;
  private renderChild;
  private renderStatusIcons;
}
interface MenuItem extends MenuItemModel {
  children?: MenuItem[];
}
export interface NavigatedRoute {
  path: string;
  segments: string[];
}
interface ChildrenBoxHeight {
  value: string;
  height: number;
}
export {};
