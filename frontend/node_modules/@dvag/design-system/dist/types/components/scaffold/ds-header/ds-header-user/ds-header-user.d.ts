import { ComponentInterface, EventEmitter } from "../../../../stencil-public-runtime";
import { HeaderActionListConfiguration } from "../ds-header-action-list/ds-header-action-list";
import { HeaderActionConfiguration } from "../ds-header-action/ds-header-action";
/**
 * Konfiguriert die Nutzer-Integration im Header.
 * @name Header Nutzerkonfiguration
 * @shortname Nutzer
 * @path /Scaffold/Header
 */
export declare class DsHeaderUser implements ComponentInterface {
  self: HTMLDsHeaderUserElement;
  private childObserver;
  private children;
  /**
   * Name des Benutzers.
   * @value string: Vor- und Nachname
   */
  name: string;
  /**
   * URL zum Foto des Benutzers
   * @value string: URL
   */
  imageurl?: string;
  /**
   * Determines whether the user name within the user menu is interactable.
   * @value true: The user name is interactable. The `usernameInteraction` event is thrown on interaction.
   * @value false: The user name is not interactable.
   */
  usernameinteractable: boolean;
  /**
   * Event wird gefeuert, wenn der Nutzer sich abmelden m√∂chte.
   */
  signOut: EventEmitter<void>;
  /**
   * Fired when the user interacts with the Name of the current user, within the avatar-menu.
   */
  usernameInteraction: EventEmitter<void>;
  /**
   * @internal
   */
  toHeaderUserConfiguration(): Promise<HeaderUserConfiguration>;
  connectedCallback(): void;
  disconnectedCallback(): void;
}
export interface HeaderUserConfiguration {
  id?: string;
  name: string;
  imageUrl?: string;
  children: (HeaderActionListConfiguration | HeaderActionConfiguration)[];
  usernameInteraction: () => void;
  usernameInteractable: boolean;
  signOut: () => void;
}
