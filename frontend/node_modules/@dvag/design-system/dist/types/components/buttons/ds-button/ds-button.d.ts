import { ComponentInterface } from "../../../stencil-public-runtime";
/**
 * Displays a primary or secondary button.
 *
 * @path /Buttons
 * @name Button
 * @shortname Button
 * @icon minus-square
 * @stable
 *
 * @slot - Contains the label of the button. Use the `<ds-text>` component for that.
 * @slot-example verschiedene-stile
 */
export declare class DsButton implements ComponentInterface {
  private buttonElement;
  self: HTMLDsButtonElement;
  /**
   * Defines the visual representation of the button.
   * @value primary: Flat colored button to indicate an important action.
   * @value secondary: Outlined transparent button for less important actions.
   * @example type
   * @example verschiedene-stile
   */
  type: "primary" | "secondary";
  /**
   * Defines the size of othe button.
   * @value medium: Medium button size
   * @value small: Small button size, optimized for usage in forms
   * @example size
   * @example verschiedene-stile
   */
  size: "medium" | "small";
  /**
   * Modifies the button width behavior
   * @value false: Button width is determined by the button content
   * @value true: Button width is stretched to match the width of the host element.
   */
  stretch: boolean;
  /**
   * Disables user interaction on the button.
   * @value false: User can interaction with the button.
   * @value true: User can not interaction with the button.
   * @example disabled
   * @example verschiedene-stile
   */
  disabled: boolean;
  /**
   * Disables the ability to focus the button via tabulator navigation.
   * @value false: Button is reachable via tab navigation.
   * @value true: Button is ignored when using tab navigation.
   * @example unfocusable
   */
  unfocusable: boolean;
  /**
   * Focuses this element.
   */
  focusControl(): Promise<void>;
  componentWillLoad(): Promise<void> | void;
  render(): any;
}
