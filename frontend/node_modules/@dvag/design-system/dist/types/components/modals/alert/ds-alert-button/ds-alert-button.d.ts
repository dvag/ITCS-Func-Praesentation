import { ComponentInterface } from "../../../../stencil-public-runtime";
/**
 * A meta element for describing a button within a `<ds-alert>` context.
 *
 * @name Alert-Button
 * @shortname Button
 * @path /Modals/Alert
 * @icon minus-square
 * @stable
 */
export declare class DsAlertButton implements ComponentInterface {
  self: HTMLDsAlertButtonElement;
  /**
   * Button label.
   *
   * @value string: Text
   */
  label: string;
  /**
   * Unique identifier of this component within a `<ds-alert>` element.
   * @value string: Identifier text.
   */
  value: string;
  /**
   * Indicates whether this button confirms the upper `<ds-alert>` element.
   * @value true: When typing 'Enter' this button is selected when no other element is in focus.
   * @value false: This button can only be interacted with by clicking or explicitly focusing the corresponding button in the upper `<ds-alert>` element.
   */
  confirm: boolean;
  /**
   * The label is displayed with a bold font.
   * @value true: Bold label font.
   * @value false: Default label font.
   */
  highlight?: boolean;
  /**
   * Disables the interaction with the corresponding button of this element.
   * @value false: Button is interactable.
   * @value true: Button is disabled.
   */
  disabled: boolean;
  /**
   * Label color.
   *
   * @value red: rot
   * @value gold: gold
   */
  color: "gold" | "rot";
  /**
   * Extracts this element's properties into a complex javascript object.
   *
   * @internal
   */
  toAlertButtonData(): Promise<AlertButtonData>;
  private click;
}
export interface AlertButtonData {
  label: string;
  value: string;
  confirm: boolean;
  color: "gold" | "rot";
  highlight: boolean;
  disabled: boolean;
  onClick: (event: MouseEvent) => void;
}
