import { ComponentInterface } from "../../../stencil-public-runtime";
import { Size } from "../../../classes/sizes.util";
/**
 * Component which takes space between two elements.
 * The size of this component can be a value of a predefined set of sizes defined in the concepts.
 *
 * @name Spacer
 * @path /Layout
 * @icon arrows-alt-h
 * @stable
 */
export declare class DxSpacer implements ComponentInterface {
  self: HTMLDxSpacerElement;
  private breakpointAware;
  /**
   * Defines the size of the spacer for the MQ1 breakpoint.
   * @value 0, 4, 8, 16, 24, 32, 40, 48, 56, 64, 80, 120: The predefined width and height of this component
   *
   * @value postfix 'v' (e.g '4v', '64v'): The defined size will only be applied to the height of the component.
   * @value postfix 'h' (e.g '4h', '64h'): The defined size will only be applied to the height of the component.
   * @value no postfix (e.g 4, 64): The defined size will be applied to the width and height of the component.
   */
  mq1: Size;
  /**
   * Defines the size of the spacer for the MQ2 breakpoint.
   * @value 0, 4, 8, 16, 24, 32, 40, 48, 56, 64, 80, 120: The predefined width and height of this component
   *
   * @value postfix 'v' (e.g '4v', '64v'): The defined size will only be applied to the height of the component.
   * @value postfix 'h' (e.g '4h', '64h'): The defined size will only be applied to the height of the component.
   * @value no postfix (e.g 4, 64): The defined size will be applied to the width and height of the component.
   */
  mq2: Size;
  /**
   * Defines the size of the spacer for the MQ3 breakpoint.
   * @value 0, 4, 8, 16, 24, 32, 40, 48, 56, 64, 80, 120: The predefined width and height of this component
   *
   * @value postfix 'v' (e.g '4v', '64v'): The defined size will only be applied to the height of the component.
   * @value postfix 'h' (e.g '4h', '64h'): The defined size will only be applied to the height of the component.
   * @value no postfix (e.g 4, 64): The defined size will be applied to the width and height of the component.
   */
  mq3: Size;
  /**
   * Defines the size of the spacer for the MQ4 breakpoint.
   * @value 0, 4, 8, 16, 24, 32, 40, 48, 56, 64, 80, 120: The predefined width and height of this component
   *
   * @value postfix 'v' (e.g '4v', '64v'): The defined size will only be applied to the height of the component.
   * @value postfix 'h' (e.g '4h', '64h'): The defined size will only be applied to the height of the component.
   * @value no postfix (e.g 4, 64): The defined size will be applied to the width and height of the component.
   */
  mq4: Size;
  /**
   * Defines the size of the spacer for the MQ5 breakpoint.
   * @value 0, 4, 8, 16, 24, 32, 40, 48, 56, 64, 80, 120: The predefined width and height of this component
   *
   * @value postfix 'v' (e.g '4v', '64v'): The defined size will only be applied to the height of the component.
   * @value postfix 'h' (e.g '4h', '64h'): The defined size will only be applied to the height of the component.
   * @value no postfix (e.g 4, 64): The defined size will be applied to the width and height of the component.
   */
  mq5: Size;
  connectedCallback(): void;
  disconnectedCallback(): void;
  componentWillRender(): Promise<void> | void;
  private checkValue;
  private getCurrentBreakpointValue;
  render(): any;
}
