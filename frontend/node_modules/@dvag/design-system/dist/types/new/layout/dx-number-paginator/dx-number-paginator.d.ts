import { ComponentInterface, EventEmitter } from "../../../stencil-public-runtime";
/**
 * A component used for visualizing and changing pages in any context.
 *
 * @name Number Paginator
 * @shortname Number
 * @path /Layout/Paginator
 * @icon exchange-alt
 *
 * @stable
 */
export declare class DxNumberPaginator implements ComponentInterface {
  private pageIndexTypes;
  private breakpointAware;
  self: HTMLDxNumberPaginatorElement;
  mode: RenderModesType;
  componentDidLoad(): void;
  /**
   * The number of pages which can be selected.
   *
   * @value number: The number of pages.
   * @example count
   */
  count: number;
  onCountChange(): void;
  /**
   * The current selected page.
   *
   * @value number: The current selected page from 1 to `count`.
   *
   * @example current
   */
  current: number;
  onPageChange(newValue: number, oldValue: number): void;
  /**
   * Triggers when the page changes by interacting with the arrows, the page numbers or the dropdown (MQ1).
   *
   * @example pagechange
   */
  pageChanged: EventEmitter<number>;
  connectedCallback(): void;
  disconnectedCallback(): void;
  componentWillLoad(): Promise<void> | void;
  componentWillRender(): Promise<void>;
  onItemSelectionChanged(e: CustomEvent<number>): void;
  private onDropdownClicked;
  private onBreakpointChange;
  private setCurrentPage;
  private renderGap;
  private renderPageButton;
  private renderPageSelection;
  private renderDropdown;
  private renderPageButtons;
  render(): any;
}
interface RenderModes {
  default: () => void;
  dropdown: () => void;
}
declare type RenderModesType = keyof RenderModes;
export {};
