import { EventEmitter } from "../../../../stencil-public-runtime";
/**
 * Definition of a step within a `<dx-wizard>` component. It contains meta-data which enables the parent wizard component to display a corresponding step.
 *
 * @name Wizard step
 * @shortname Step
 * @path /Layout/Wizard
 * @icon step-forward
 * @meta
 */
export declare class DxWizardStep {
  self: HTMLDxWizardStepElement;
  /**
   * A unique identifier within a `<dx-wizard>` element.
   *
   * @value string: A non-displayed text representing this component. It also serves the purpose of identifying which slot to show when this step is currently edited.
   *
   * @example value
   */
  value: string;
  /**
   * The displayed name of this step.
   *
   * @value string: The displayed name.
   *
   * @example label
   */
  label: string;
  /**
   * Whether this step is already finished or not.
   *
   * @value true: The step is finished. If all previous steps are finished as well the wizard automatically switches to the next page.
   * @value false: The step is not finished yet.
   *
   * @example finished
   */
  finished: boolean;
  onFinishedChanged(): void;
  /**
   * @internal
   */
  finishedChange: EventEmitter<boolean>;
  /**
   * Fires when the user interacts with this step.
   *
   * @example interaction
   */
  interaction: EventEmitter<void>;
  connectedCallback(): void;
  /**
   * @internal
   */
  toWizardStep(): Promise<WizardStep>;
}
export interface WizardStep {
  label: string;
  value: string;
  finished: boolean;
  interact: () => void;
  metaStepComponent: HTMLDxWizardStepElement;
}
