import { ComponentInterface } from "../../../stencil-public-runtime";
import { ColumnAlignment, ColumnSettings } from "../table-common-types";
/**
 * @path /Table
 * @name Table Cell
 * @shortname Cell
 * @icon border-all
 * @stable
 *
 */
export declare class DxTableCell implements ComponentInterface {
  private touchDetected;
  self: HTMLDxTableCellElement;
  /**
   * The value of this cell. It will be formatted depending on the cell's `type`.
   * @value string: The value which is formatted within the cell.
   */
  value?: string;
  /**
   * The type of this cell.
   * If not explicity set the cell inherits the type by the corresponding `<dx-table-header-item>`.
   *
   *  @value text: The `value` is a string which will be rendered as text.
   *  It is left-aligned by default.
   *
   * @value numeric: The `value` is a number which will be rendered as text.
   * It is right-aligned by default.
   *
   * @value date:  The `value` is a string ('YYYY-mm-dd') which will be formatted as a date string.
   * It is left-aligned by default.
   *
   * @value currency: The `value` is a number which will be formatted as a currency string (e.g: 1.120,00 â‚¬).
   * The currency itself is rendered as an icon.
   * It is right-aligned by default.
   *
   * @value html: The default slot will be rendered in place of the `value`.
   */
  type: string;
  /**
   * The alignment of this cell.
   * If not explicity set the cell derives the alignment
   */
  align: ColumnAlignment;
  /**
   * The background color.
   * @value string: A color which has to be defined within the color palette of the design system. (e.g.: blue-100, error, etc.)
   */
  color: string;
  settings: ColumnSettings;
  tooltipText: string;
  showTooltip: boolean;
  onShowTooltipChanged(): void;
  /**
   * @internal
   */
  obtainSettings(settings: ColumnSettings): Promise<void>;
  private updateTooltipText;
  private getInnerElement;
  private renderCellText;
  private handleContextMenu;
  private getStyle;
  private getAlign;
  render(): any;
  renderPopup(alignClass: {
    [key: string]: boolean;
  }): any;
}
