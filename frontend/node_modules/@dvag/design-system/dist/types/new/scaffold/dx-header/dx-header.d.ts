import { ComponentInterface, EventEmitter } from "../../../stencil-public-runtime";
import "../../../classes/extensions";
/**
 * The header is positioned at the top edge of the page. It displays application information (like logo, application name, etc.) and different menu items which trigger a sidebar when interacted with.
 *
 * You can find a fully configured header in [this](assets/examples/App.html) example.
 *
 * @path /Scaffold
 * @name Header
 * @icon heading
 * @stable
 *
 * @slot menu - Header menu items (`<dx-header-menu-item>`, `<dx-header-navigation`, etc.) which are represented within a menu bar in the right corner of the header.
 * @slot ${connectedslot} - These slots represent the sidebar content of a `<dx-header-menu-item>` with the same `connectedslot` attribute as the name of the slot. (e.g. `<dx-header-menu-item connectedslot="info">` => `<dx-sidebar-content slot="info">`
 * @slot navigation-header - This slot is for content that will be displayed in the header area of the navigation sidebar.
 * @slot navigation-footer - This slot is for content that will be displayed in the footer area of the navigation sidebar.
 */
export declare class DxHeader implements ComponentInterface {
  private breakpointAware;
  private lastScrollPositionY;
  private menuBar;
  private contentElement;
  private logoElement;
  private headerHeightSubscription;
  private slotObserver;
  private infoContainerSlotObserver;
  self: HTMLDxHeaderElement;
  elevated: boolean;
  hideHeaderBar: boolean;
  internalTheme: HeaderTheme;
  sidebarOpen: boolean;
  /**
   * The theme of the header defines the color palette which is used for it's sub-elements.
   *
   * @value white: The default theme displays the header with a white background.
   * @value gold: The golden theme which is implemented for "meine.dvag".
   * @warning This property must not be used by other projects than "meine.dvag".
   */
  theme: HeaderTheme;
  onThemeChanged(): void;
  /**
   * The logo which is displayed in the left corner of the header.
   *
   * @value text: Brand Logo with the company's name. The `applicationname` will not be displayed.
   * @value image: Brand Logo without a name. The `applicationname` will be displayed next to the logo.
   */
  logo: "text" | "image";
  /**
   * Defines the brand appearance of header internal branding elements (e.g. the logo image).
   *
   * @value default: The default brand of the DVAG is used.
   */
  brand: "default";
  /**
   * The name of the application this component runs with.
   * @value string: The name of the app.
   *
   * @example app-name
   */
  appname?: string;
  /**
   * Whether to show the current announcement bar or not.
   *
   * @value true: Shows an announcement in case the "announcement-bar" slot is defined.
   * @value false: Hides the announcement.
   */
  showannouncement: boolean;
  onShowAnnouncementChanged(): void;
  /**
   * An event which is triggered when the user clicks the logo or the application name.
   * This event should always be used to show the user the application's home page.
   */
  navigateHome: EventEmitter<void>;
  componentDidLoad(): void;
  private intersectionObserver;
  connectedCallback(): void;
  disconnectedCallback(): void;
  onScroll(): void;
  onResize(): void;
  private initializeSlotObserver;
  private setupIntersectionObserver;
  private updateMenuBar;
  private getMinimalApplicationNameWidth;
  private getLogo;
  private obtainMenuBar;
  private renderApplicationName;
  private renderInfoContainer;
  private renderAnnouncement;
  private getMaxTop;
  allow: boolean;
  render(): any;
}
export declare type HeaderTheme = "gold" | "white";
