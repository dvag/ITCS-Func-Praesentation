/**
 * Displays a round user avatar.
 * When defined there is an image of the user displayed  within the avatar. Otherwise his initials will be shown.
 *
 * @name User Avatar
 * @shortname Avatar
 * @icon user-tie
 * @path /Miscellaneous
 * @stable
 */
export declare class DxUserAvatar {
  self: HTMLDxUserAvatarElement;
  /**
   * The image URL of the user.
   * @value string: URL
   * @example image
   */
  imageurl?: string;
  /**
   * The initials of the user's name.
   * @value string: Initials, e.g. `"FG"`
   * @important
   * @example initials
   */
  initials?: string;
  /**
   * The size of the user avatar.
   * @value xs: Extra-small sized user avatar (40px)
   * @value s: Small sized user avatar (56px)
   * @value m: Medium sized user avatar (72px)
   * @value l: Large sized user avatar (96px)
   * @value xl: Extra-large sized user avatar (120px)
   * @value xxl: Extra-extra-large sized user avatar (160px)
   */
  size: DxUserAvatarSize;
  render(): any;
  private renderImage;
  private renderInitials;
}
declare const USER_AVATAR_SIZES: readonly ["xs", "s", "m", "l", "xl", "xxl"];
export declare type DxUserAvatarSize = typeof USER_AVATAR_SIZES[number];
export {};
