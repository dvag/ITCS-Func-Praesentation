import { DsObservable } from "../../../classes/multicast-observable";
export declare class HeaderService {
  private headerSubject;
  private headerHeightSubject;
  private headerVisibilitySubject;
  private headerResizeObserver;
  private scrollInteractionEnabled;
  private disableScrollInteractionTimeoutHandle;
  static instance(): HeaderService;
  get header$(): DsObservable<HTMLDxHeaderElement>;
  get header(): HTMLDxHeaderElement;
  set header(header: HTMLDxHeaderElement);
  unsetHeaderElement(header: HTMLDxHeaderElement): void;
  get headerHeight$(): DsObservable<number>;
  get headerHeight(): number;
  get isVisible(): boolean;
  set isVisible(isVisible: boolean);
  get isVisible$(): DsObservable<boolean>;
  get isScrollInteractionEnabled(): boolean;
  disableScrollInteractionForMs(timeMs: number): Promise<void>;
}
export declare function subscribeToHeaderHeight(heightChangeCallback: (height: number, isVisible: boolean) => void): HeaderHeightSubscription;
export declare type HeaderHeightSubscription = {
  unsubscribe: () => void;
};
