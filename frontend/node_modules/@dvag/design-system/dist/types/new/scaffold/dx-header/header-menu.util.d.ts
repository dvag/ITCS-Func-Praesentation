import { NotificationIndicatorThemeType, NotificationIndicatorType } from "../../internal/dx-notification-indicator/notification-indicator.util";
export interface MenuEntry {
  priority: number;
  internalopen?: boolean;
  getDefaultWidth: () => Promise<number>;
}
export interface MenuItem extends MenuEntry {
  connectedslot?: string;
  renderSidebarContent?: () => Promise<any>;
  internalactive: boolean;
  internalnotification?: boolean;
  notification?: boolean;
  notifications: NotificationIndicatorType;
  notificationstheme: NotificationIndicatorThemeType;
  internalnotificationstheme?: NotificationIndicatorThemeType;
}
export interface MenuLink extends MenuEntry {
  label: string;
  selected?: boolean;
  connectednavigationvalue?: string;
}
export interface RenderSidebarPayload {
  renderFunction: () => Promise<any>;
}
export interface MenuGroup extends MenuEntry {
  getInnerMenuItems?: () => Promise<HTMLElement[]>;
}
export declare type MenuEntryElement = HTMLElement & MenuEntry;
export declare type MenuItemElement = HTMLElement & MenuItem;
export declare type MenuLinkElement = HTMLElement & MenuLink;
export declare type MenuGroupElement = HTMLElement & MenuGroup;
export declare function isMenuItem(menuEntry: MenuEntryElement): menuEntry is MenuItemElement;
export declare function isMenuGroup(menuEntry: MenuEntryElement): menuEntry is MenuGroupElement;
export declare function isMenuLink(menuEntry: MenuEntryElement): menuEntry is MenuLinkElement;
