import { DateSelectionMode } from "../date";
/**
 * Allows to pick a date-range by inputing two date-input components.
 *
 * @name Date-Range-Picker
 * @shortname Range
 * @path /Form/Inputs/Date
 * @icon calendar-plus
 * @stable
 *
 */
export declare class DxDateRange {
  private slotObserver;
  private calendar;
  private errors;
  self: HTMLDxDateRangeElement;
  currentlyFocused: boolean;
  internalErrorMessage: string;
  /**
   * Defines the minimal allowed date.
   *
   * @value string: A date in following format: YYYY-MM-dd
   * @example min-max
   */
  min?: string;
  /**
   * Defines the maximal allowed date.
   *
   * @value string: A date in following format: YYYY-MM-dd
   * @example min-max
   */
  max?: string;
  /**
   * Defines how a date range can be selected or edited.
   *
   * @value "day-month-year": The user can select a specific date range.
   * The calendar shows all three views (month, year and decade) for selecting a date range.
   * @value "month-year": The user can select a month range.
   * The calendar shows two views (year and decade) for selecting a month range.
   * @value "day-month": The user can select two possible dates within a year.
   * The calendar shows two views (month and year) for selecting a date range.
   */
  mode: DateSelectionMode;
  /**
   * The current displayed date range.
   *
   * @important
   * @value string: Two comma seperated dates in following format: YYYY-MM-dd (e.g.: 2021-01-01,2021-12-31)
   * @example value
   */
  value: string;
  onValueChange(): void;
  private onFocus;
  private onBlur;
  private onError;
  private onDateValueChange;
  connectedCallback(): void;
  componentDidLoad(): void;
  disconnectedCallback(): void;
  onSegmentBlurred(): void;
  /**
   * Sets the focus on the first date input element.
   */
  focusControl(): Promise<void>;
  private handleBlur;
  private handleError;
  private handleDateValueChange;
  private getDateInputs;
  private selectRange;
  private updateCalendarValue;
  private setCalendar;
  private renderCalendar;
  render(): any;
}
