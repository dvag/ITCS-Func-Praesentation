import { ComponentInterface, EventEmitter } from "../../../../stencil-public-runtime";
/**
 * A radio button representing an option inside a `<dx-radio-button-group>` element.
 *
 * @path /Form/Radio
 * @name Radio-Button
 * @shortname Button
 * @icon check-circle
 *
 * @stable
 */
export declare class DxRadioButton implements ComponentInterface {
  private inputElement;
  self: HTMLDxRadioButtonElement;
  /**
   * Identifier of this option. When selected this value overwrites the `<dx-radio-button-group>`'s value.
   *
   * @value string: The identifier of this option.
   * @example value
   */
  value: string;
  /**
   * Disables the ability to interact with this component.
   *
   * @value false: User can interact with this component.
   * @value true: User cannot interact with this component.
   *
   * @example modes
   */
  disabled: boolean;
  /**
   * Text, which is displayed next to the radio button.
   *
   * @important
   * @value string: Label text.
   * @example label
   */
  label?: string;
  /**
   * The group id of the parent radio button group. If not defined the first radio-button-group which is found will be elected as the owner of this radio-button
   * @internal
   */
  groupid: string;
  /**
   * @internal
   */
  internalCheckedChange: EventEmitter<boolean>;
  /**
   * @internal
   */
  internalSetChecked(checked: boolean): Promise<void>;
  /**
   * @internal
   */
  internalSelect(): Promise<void>;
  /**
   * Sets the focus on this component.
   * @example focus
   */
  focusControl(): Promise<void>;
  /**
   * @internal
   */
  forceUpdate(): Promise<void>;
  connectedCallback(): void;
  disconnectedCallback(): void;
  componentWillLoad(): Promise<void> | void;
  private containsLabel;
  private select;
  private group;
  render(): any;
}
