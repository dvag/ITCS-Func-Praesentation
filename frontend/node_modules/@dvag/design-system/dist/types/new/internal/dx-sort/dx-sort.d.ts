import { ComponentInterface, EventEmitter } from "../../../stencil-public-runtime";
import { Point } from "../../../classes/math-util";
/**
 * @hidden
 *
 * @slot - `<dx-sort-item>` elements which should be sorted.
 */
export declare class DxSort implements ComponentInterface {
  self: HTMLDxSortElement;
  private slotObserver;
  private contentDiv;
  private automaticScrollIntervalHandler;
  private autoScrollActive;
  private currentDraggingSortItem;
  /**
   * Whether the sorting is enabled or not.
   *
   * @example sortable
   */
  sortable: boolean;
  onSortableChanged(): void;
  dragging: boolean;
  sortItems: HTMLDxSortItemElement[];
  /**
   * Fires when the children are sorted by the user. By reading the event's detail property you can access the `originalArray` and the `sortedArray`.
   * Both arrays consist of the `value` properties provided by the `<dx-sort-item>` elements.
   *
   * @example sort
   */
  sort: EventEmitter<SortDetail>;
  private getNearestItem;
  private stopAutomaticScrolling;
  private automaticScroll;
  onMouseWheel(e: WheelEvent): void;
  onDraggingStart(e: CustomEvent<void>): void;
  onDragging(e: CustomEvent<Point>): void;
  onDraggingEnd(): void;
  connectedCallback(): void;
  disconnectedCallback(): void;
  private updateAutomaticScrolling;
  /**
   * Pushes all sortItems away to reserve space for the current dragging sort item.
   *
   * @param reservedSlotIndex: The new slot for the current dragging sort item.
   */
  private pushAwaySortItems;
  private updateSlotsOrder;
  render(): any;
}
export interface SortDetail {
  originalArray: string[];
  sortedArray: string[];
}
