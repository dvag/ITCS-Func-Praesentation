export declare class SlotObserver<T extends HTMLElement> {
  private componentElement;
  private tagNameToFilter;
  private callback;
  private pierceShadowDom;
  private mutationObserver;
  private lastEmittedNodesOuterHtml;
  constructor(componentElement: HTMLElement, tagNameToFilter: string, callback: (nodes: T[]) => void, pierceShadowDom?: boolean);
  connect(): void;
  disconnect(): void;
  private checkAllHydrated;
  private findAllNodes;
  private onMutation;
}
export declare const findElementByTagNamePiercingShadowDom: <T>(base: Element, tagName: string) => T[];
export declare function createMetaComponentsSlotObserver<T extends HTMLElement>(componentElement: HTMLElement, tagNameToFilter: string, callback: (nodes: T[]) => void, pierceShadowDom?: boolean): SlotObserver<T>;
export declare function directChildSelector(...element: string[]): string;
