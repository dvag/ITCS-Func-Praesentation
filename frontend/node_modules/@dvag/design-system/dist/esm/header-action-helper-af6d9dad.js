async function extractHeaderActionConfigurations(children) {
  return Promise.all(children.map((actionElement) => {
    if (instanceOfHtmlDsHeaderActionElement(actionElement)) {
      return actionElement.toHeaderActionConfiguration();
    }
    else if (instanceOfHtmlDsHeaderActionListElement(actionElement)) {
      return actionElement.toHeaderActionListConfiguration();
    }
  }));
}
function instanceOfHtmlDsHeaderActionElement(object) {
  if (object) {
    return "highlight" in object;
  }
  return false;
}
function instanceOfHtmlDsHeaderActionListElement(object) {
  if (object != undefined) {
    return "open" in object;
  }
  return false;
}
function instanceOfDsHeaderActionListConfiguration(object) {
  if (object != undefined) {
    return "children" in object;
  }
  return false;
}
function instanceOfDsHeaderActionConfiguration(object) {
  if (object != undefined) {
    return "highlight" in object && !("children" in object);
  }
  return false;
}

export { instanceOfDsHeaderActionListConfiguration as a, extractHeaderActionConfigurations as e, instanceOfDsHeaderActionConfiguration as i };
