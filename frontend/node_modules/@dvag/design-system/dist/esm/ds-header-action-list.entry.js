import { r as registerInstance, g as getElement } from './index-04c470ea.js';
import { c as createMetaComponentsSlotObserver } from './slot-observer-9196738e.js';
import { b as filterElementsByTagPrefix } from './misc-util-d3b69f2c.js';
import { e as extractHeaderActionConfigurations } from './header-action-helper-af6d9dad.js';
import './query-util-02753b43.js';

const DsHeaderActionList = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.children = [];
  }
  toggleOpen() {
    this.open = !this.open;
  }
  /**
   * @internal
   */
  async toHeaderActionListConfiguration() {
    return {
      id: this.self.id,
      label: this.label,
      open: this.open,
      toggleOpen: () => this.toggleOpen(),
      children: await extractHeaderActionConfigurations(this.children),
    };
  }
  connectedCallback() {
    this.childObserver = createMetaComponentsSlotObserver(this.self, ":scope > *", (nodes) => {
      this.children = filterElementsByTagPrefix(nodes, "ds-header-action");
    });
  }
  disconnectedCallback() {
    this.childObserver.disconnect();
  }
  get self() { return getElement(this); }
};

export { DsHeaderActionList as ds_header_action_list };
