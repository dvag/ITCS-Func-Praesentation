import { r as registerInstance, h, H as Host } from './index-04c470ea.js';
import { C as ColorPalette } from './color-palette-56f42693.js';
import './assert-7fc7463a.js';

const dxContainerCss = ":host{display:block}:host:host([hidden]){display:none !important}:host .container.type-page{padding:0 16px;max-width:1460px;box-sizing:border-box}@media (min-width: 476px){:host .container.type-page{padding:0 24px}}@media (min-width: 760px){:host .container.type-page{padding:0 32px}}@media (min-width: 1280px){:host .container.type-page{padding:0 40px}}@media (min-width: 1460px){:host .container.type-page{margin:auto}}";

const DxContainer = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    /**
     * The type of the container.
     *
     * @value page: The container contains paddings and margins necessary to position the content in the middle of the screen.
     * This type should only be used in a top level context.
     * @value div: The container behaves like a div.
     */
    this.type = "div";
  }
  renderDivType() {
    return h("slot", null);
  }
  renderPageContainerType() {
    return (h("div", { class: {
        container: true,
        "type-page": this.type === "page",
      } }, h("slot", null)));
  }
  render() {
    var _a;
    const hexColor = (_a = new ColorPalette(true).getColorCode(this.color)) !== null && _a !== void 0 ? _a : "white";
    return (h(Host, { style: {
        "background-color": hexColor,
      } }, this.type === "div"
      ? this.renderDivType()
      : this.renderPageContainerType()));
  }
};
DxContainer.style = dxContainerCss;

export { DxContainer as dx_container };
