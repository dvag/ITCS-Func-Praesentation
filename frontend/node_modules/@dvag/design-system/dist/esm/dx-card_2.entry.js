import { r as registerInstance, h, H as Host, g as getElement } from './index-04c470ea.js';
import { S as SlotObserver, d as directChildSelector } from './slot-observer-9196738e.js';
import './query-util-02753b43.js';

const dxCardCss = ":host{display:flex;flex-direction:column;background:#ffffff;border:1px solid #d6d6d6;box-sizing:border-box}:host:host([hidden]){display:none !important}:host:host(.contains-card-image){--dx-card-header-bottom-border-display:none}:host:host(.contains-tab-bar){border:0}:host:host(.max-content){height:max-content}";

const DxCard = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    /**
     * Whether the card has a max height of it's parent or it's content.
     * @internal
     */
    this.maxcontent = false;
    this.containsCardImage = false;
    this.containsTabBar = false;
  }
  connectedCallback() {
    this.cardImageSlotObserver = new SlotObserver(this.self, "dx-card-image", (nodes) => {
      this.containsCardImage = nodes.length > 0;
    });
    this.tabBarSlotObserver = new SlotObserver(this.self, directChildSelector("dx-tab-bar"), (nodes) => {
      this.containsTabBar = (nodes === null || nodes === void 0 ? void 0 : nodes.length) > 0;
    });
  }
  disconnectedCallback() {
    var _a, _b;
    (_a = this.cardImageSlotObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    (_b = this.tabBarSlotObserver) === null || _b === void 0 ? void 0 : _b.disconnect();
  }
  render() {
    return (h(Host, { class: {
        "max-content": this.maxcontent,
        "contains-card-image": this.containsCardImage,
        "contains-tab-bar": this.containsTabBar,
      } }, h("slot", { name: "header" }), h("slot", null)));
  }
  get self() { return getElement(this); }
};
DxCard.style = dxCardCss;

const dxCardContentCss = ":host{display:flex;flex-direction:column;padding:24px;flex:1}:host:host([hidden]){display:none !important}";

const DxCardContent = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
  }
  render() {
    return (h(Host, null, h("slot", null)));
  }
};
DxCardContent.style = dxCardContentCss;

export { DxCard as dx_card, DxCardContent as dx_card_content };
