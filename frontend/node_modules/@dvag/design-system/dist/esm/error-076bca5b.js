import { h } from './index-04c470ea.js';
import { E as ElementIdGenerator } from './element-id-handling-bb37154e.js';
import { t as tagOf } from './misc-util-d3b69f2c.js';

const ErrorMessage = (props) => props.message ? (h("dx-error-message", Object.assign({ id: ElementIdGenerator.createId(props.self, "error-message") }, props.custom, { onForceUpdateOnChange: props.forceUpdateOnChange }), props.message)) : (h("slot", { name: "error-message" }));

function hasError(element) {
  if (element === null || element === void 0 ? void 0 : element.errormessage) {
    return true;
  }
  const slottedElement = element.querySelector("*[slot=error-message]");
  const elements = (slottedElement === null || slottedElement === void 0 ? void 0 : slottedElement.assignedElements)
    ? slottedElement === null || slottedElement === void 0 ? void 0 : slottedElement.assignedElements()
    : [slottedElement];
  return elements.some((element) => {
    if (tagOf(element) === "dx-error-message") {
      return !element.hidden && element.textContent.length > 0;
    }
    return false;
  });
}

export { ErrorMessage as E, hasError as h };
