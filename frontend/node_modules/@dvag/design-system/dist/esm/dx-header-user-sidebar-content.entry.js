import { r as registerInstance, c as createEvent, h, g as getElement } from './index-04c470ea.js';
import { g as generateInitialsForName } from './misc-util-d3b69f2c.js';
import { E as ElementIdGenerator } from './element-id-handling-bb37154e.js';
import './value-store-f4663db1.js';

const dxHeaderUserSidebarContentCss = ":host:host([hidden]){display:none !important}:host .container dx-button{display:block}";

const DxHeaderUserSidebarContent = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.signOut = createEvent(this, "signOut", 7);
    this.accountInteraction = createEvent(this, "accountInteraction", 7);
    /**
     * Defines whether the account button "Benutzerkonto" is displayed or not.
     *
     * @value true: The account button is visible.
     * @value false: The account button is not visible.
     */
    this.accountavailable = true;
  }
  renderAccountButton() {
    if (!this.accountavailable) {
      return;
    }
    return (h("dx-button", { id: ElementIdGenerator.createId(this.self, "account"), type: "text", label: "Benutzerkonto", onClick: () => this.accountInteraction.emit() }));
  }
  renderLogoutButton() {
    return (h("dx-button", { id: ElementIdGenerator.createId(this.self, "sign-out"), type: "text", label: "Abmelden", onClick: () => this.signOut.emit() }));
  }
  render() {
    return (h("dx-sidebar-content", { class: "container" }, h("dx-user-avatar", { imageurl: this.imageurl, initials: generateInitialsForName(this.name), size: "xl" }), h("dx-spacer", { mq1: "24v" }), h("dx-text", { type: "its", color: "tags" }, "Angemeldete Person"), h("dx-spacer", { mq1: "8v" }), h("dx-text", { type: "ps", color: "headline" }, this.name), h("dx-spacer", { mq1: "32v" }), this.renderAccountButton(), this.renderLogoutButton()));
  }
  get self() { return getElement(this); }
};
DxHeaderUserSidebarContent.style = dxHeaderUserSidebarContentCss;

export { DxHeaderUserSidebarContent as dx_header_user_sidebar_content };
