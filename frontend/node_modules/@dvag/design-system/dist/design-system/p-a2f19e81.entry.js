import{r as t,c as i,h as s,H as h,g as o}from"./p-c66bef8d.js";import{c as r}from"./p-e0194d22.js";import{S as e}from"./p-968cb048.js";import{l,t as n}from"./p-90458c1b.js";import{w as a}from"./p-aa0a06c6.js";import"./p-fabbcf47.js";const c=class{constructor(s){t(this,s),this.scrollVerticalActive=i(this,"scrollVerticalActive",7),this.scrollHorizontalActive=i(this,"scrollHorizontalActive",7),this.initialYPositionOnScrollBar=0,this.updateScrollParameterEvents=["scroll","resize","move"],this.updateHandler=()=>this.update(),this.verticalMouseMoveHandler=t=>this.handleVerticalScrollBarMouseMove(t),this.horizontalMouseMoveHandler=t=>this.handleHorizontalScrollBarMouseMove(t),this.mouseUpHandler=()=>this.handleScrollBarMouseUp(),this.currentDraggingBar=null,this.collisionTop=0,this.collisionBottom=0,this.horizontalThumbWidth=0,this.verticalThumbHeight=0,this.verticalThumbTop=0,this.horizontalThumbLeft=0,this.top=0,this.left=0,this.height=0,this.width=0,this.thumbwidth=4,this.thumbmargin=0,this.thumbcolor="#dedede",this.thumbopacity=1,this.minthumbsize=16,this.scrollbarspace=0,this.scrollbaroffset=0,this.scrollbarwidth=0,this.scrollbarmargin=0,this.verticalscrollbarposition="right",this.horizontalscrollbarposition="bottom",this.scrollbarcolorfactor=.5,this.scrollbarborderradius=7,this.scrollbaropacity=.5}onDraggingBarChanged(t,i){"vertical"===t?this.scrollVerticalActive.emit(!0):"horizontal"===t?this.scrollHorizontalActive.emit(!0):("vertical"===i?this.scrollVerticalActive:this.scrollHorizontalActive).emit(!1)}connectedCallback(){this.slotObserver=new e(this.self,"*",(t=>{this.init(t[0])}))}disconnectedCallback(){var t;null===(t=this.slotObserver)||void 0===t||t.disconnect()}handleScrollBarMouseUp(){this.currentDraggingBar=null,window.removeEventListener("mouseup",this.mouseUpHandler),window.removeEventListener("mousemove",this.verticalMouseMoveHandler),window.removeEventListener("mousemove",this.horizontalMouseMoveHandler)}update(){void 0!==this.scrollContainer&&(this.scrollContainerBoundings=this.scrollContainer.getBoundingClientRect(),this.updateVertical(),this.updateHorizontal())}updateVertical(){const t=this.scrollContainer.offsetHeight,i=this.scrollContainer.scrollHeight;if(i>t){this.verticalThumbHeight=Math.max(this.minthumbsize,t*(t/i));const s=this.thumbmargin;this.verticalThumbTop=s+this.scrollContainer.scrollTop/(i-t)*(this.verticalScrollContainerHeight-this.verticalThumbHeight-this.thumbmargin-s)}else this.verticalThumbTop=0,this.verticalThumbHeight=0}updateHorizontal(){const t=this.scrollContainer.offsetWidth,i=this.scrollContainer.scrollWidth;if(i>t){this.horizontalThumbWidth=Math.max(this.minthumbsize,t*(t/i));const s=this.thumbmargin;this.horizontalThumbLeft=s+this.scrollContainer.scrollLeft/(i-t)*(this.horizontalScrollContainerWidth-this.horizontalThumbWidth-this.thumbmargin-s)}else this.horizontalThumbLeft=0,this.horizontalThumbWidth=0}get scrollBarWidth(){return Math.max(this.scrollbarwidth,this.thumbwidth+2*this.thumbmargin)}init(t){var i;this.updateScrollParameterEvents.forEach((i=>{var s;null===(s=this.scrollContainer)||void 0===s||s.removeEventListener(i,this.updateHandler),null==t||t.addEventListener(i,this.updateHandler),window.removeEventListener(i,this.updateHandler),window.addEventListener(i,this.updateHandler)})),this.scrollContainer=t,this.scrollContainerBoundings=null===(i=this.scrollContainer)||void 0===i?void 0:i.getBoundingClientRect(),a(10).then(this.updateHandler)}get verticalScrollContainerHeight(){return this.self.offsetHeight-2*this.scrollbarmargin-2*this.getTargetMargin("Top")}get horizontalScrollContainerWidth(){return this.self.offsetWidth-2*this.scrollbarmargin-2*this.getTargetMargin("Left")}getTargetMargin(t){if(void 0!==this.scrollContainer){const i="margin"+t,s=getComputedStyle(this.scrollContainer);return parseInt(s[i]||s.margin)}return 0}get verticalScrollContainerY(){return this.scrollbarmargin+this.getTargetMargin("Top")+("top"===this.horizontalscrollbarposition?this.actualScrollbarSpace:0)}get horizontalScrollContainerX(){return this.scrollbarmargin+this.getTargetMargin("Left")+("left"===this.verticalscrollbarposition?this.actualScrollbarSpace:0)}scrollContainerBegin(t){const i=this.scrollContainerBoundings[t],s=window[`page${t.toUpperCase()}Offset`];return i+this.scrollbarmargin+s}toLocal(t,i){return t+window[`page${i.toUpperCase()}Offset`]-this.scrollContainerBegin(i)}handleVerticalScrollBarMouseDown(t){t.preventDefault(),this.scrollContainerBoundings=this.scrollContainer.getBoundingClientRect();const i=this.toLocal(t.y,"y"),s=this.verticalThumbTop;this.initialYPositionOnScrollBar=i-s,r(i,s,s+this.verticalThumbHeight)==i||(this.initialYPositionOnScrollBar=.5*this.verticalThumbHeight,this.scrollContainer.scrollTop=this.getScrollPositionY(t.y)),this.currentDraggingBar="vertical",window.addEventListener("mousemove",this.verticalMouseMoveHandler),window.addEventListener("mouseup",this.mouseUpHandler)}handleHorizontalScrollBarMouseDown(t){t.preventDefault();const i=this.toLocal(t.x,"x");this.initialYPositionOnScrollBar=i-this.horizontalThumbLeft;const s=this.horizontalThumbLeft;r(i,s,s+this.horizontalThumbWidth)==i||(this.initialYPositionOnScrollBar=.5*this.horizontalThumbWidth,this.scrollContainer.scrollLeft=this.getScrollPositionX(t.x)),this.currentDraggingBar="horizontal",window.addEventListener("mousemove",this.horizontalMouseMoveHandler),window.addEventListener("mouseup",this.mouseUpHandler)}handleVerticalScrollBarMouseMove(t){this.currentDraggingBar&&this.visibleVertical&&void 0!==this.scrollContainer&&(t.stopPropagation(),this.scrollContainer.scrollTop=this.getScrollPositionY(t.y))}handleHorizontalScrollBarMouseMove(t){this.currentDraggingBar&&this.visibleHorizontal&&void 0!==this.scrollContainer&&(t.stopPropagation(),this.scrollContainer.scrollLeft=this.getScrollPositionX(t.x))}get visibleVertical(){return this.verticalThumbHeight>0}get visibleHorizontal(){return this.horizontalThumbWidth>0}getScrollPositionY(t){const i=this.verticalScrollContainerHeight-this.verticalThumbHeight,s=this.toLocal(t,"y")-this.initialYPositionOnScrollBar;return r(s,0,this.verticalScrollContainerHeight)/i*(this.scrollContainer.scrollHeight-this.scrollContainer.offsetHeight)}getScrollPositionX(t){const i=this.horizontalScrollContainerWidth-this.horizontalThumbWidth,s=this.toLocal(t,"x")-this.initialYPositionOnScrollBar;return r(s,0,this.horizontalScrollContainerWidth)/i*(this.scrollContainer.scrollWidth-this.scrollContainer.offsetWidth)}render(){return s(h,null,s("slot",null),this.renderScrollBars())}get actualScrollbarSpace(){return this.scrollbarspace}createVerticalScrollBar(t,i,h,o){if(this.visibleVertical){const r={};return r[this.verticalscrollbarposition]=t+this.scrollbaroffset+"px",s("div",{class:{"scrollbar-container":!0,visible:this.visibleVertical},onMouseDown:t=>this.handleVerticalScrollBarMouseDown(t),style:Object.assign(Object.assign({},r),{top:this.verticalScrollContainerY+"px",height:this.verticalScrollContainerHeight+"px",width:this.scrollBarWidth+"px","background-color":h,"border-radius":o})},s("div",{style:{top:this.verticalThumbTop+"px",left:i,width:this.thumbwidth+"px",height:this.verticalThumbHeight+"px","background-color":this.thumbcolor,position:"absolute","border-radius":o,opacity:this.thumbopacity.toString()},class:{scrollbar:!0,active:"vertical"===this.currentDraggingBar}}))}}createHorizontalScrollBar(t,i,h){if(this.visibleHorizontal){const o={};return o[this.horizontalscrollbarposition]=-t-this.scrollbaroffset+"px",s("div",{class:{"scrollbar-container":!0,visible:this.visibleHorizontal},onMouseDown:t=>this.handleHorizontalScrollBarMouseDown(t),style:Object.assign(Object.assign({},o),{left:this.horizontalScrollContainerX+"px",width:this.horizontalScrollContainerWidth+"px",height:this.scrollBarWidth+"px","background-color":i,"border-radius":h})},s("div",{style:{left:this.horizontalThumbLeft+"px",height:this.thumbwidth+"px",width:this.horizontalThumbWidth+"px","background-color":this.thumbcolor,position:"absolute","border-radius":h,opacity:this.thumbopacity.toString()},class:{scrollbar:!0,active:"horizontal"===this.currentDraggingBar}}))}return null}renderScrollBars(){if(!this.visibleVertical&&!this.visibleHorizontal)return null;const t=l(this.thumbcolor,this.scrollbarcolorfactor)+n(255*this.scrollbaropacity),i=this.scrollbarborderradius+"px",s=.5*this.actualScrollbarSpace-.5*this.scrollBarWidth;return[this.createVerticalScrollBar(s,50*(1-this.thumbwidth/this.scrollBarWidth)+"%",t,i),this.createHorizontalScrollBar(s,t,i)]}get self(){return o(this)}static get watchers(){return{currentDraggingBar:["onDraggingBarChanged"]}}};c.style=":host{display:flex;scrollbar-width:none;-ms-overflow-style:none;position:relative;width:100%}:host:host([hidden]){display:none !important}::slotted(*){overflow:scroll;scrollbar-width:none;-ms-overflow-style:none}::slotted(:first-child::-webkit-scrollbar){display:none}.scroll-container{display:flex;flex-grow:1;overflow:scroll;scrollbar-width:none;-ms-overflow-style:none}.glue{width:0px;height:0px;position:sticky}::-webkit-scrollbar{display:none}.scrollbar-container{position:absolute;display:none;cursor:pointer;z-index:105}.scrollbar-container .scrollbar{background-color:#dedede}.scrollbar-container .scrollbar.active{background-color:#c1c1c1 !important}.scrollbar-container:hover .scrollbar{background-color:#c1c1c1 !important}.scrollbar-container.visible{display:block}";export{c as ds_scroll_container}