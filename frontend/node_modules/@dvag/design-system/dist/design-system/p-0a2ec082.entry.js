import{r as t,c as i,g as s}from"./p-c66bef8d.js";import{v as e}from"./p-70f48e14.js";import{c as a}from"./p-968cb048.js";import{s as o}from"./p-42881f82.js";import"./p-15b13381.js";import"./p-fabbcf47.js";const n=class{constructor(s){t(this,s),this.interaction=i(this,"interaction",7),this.internalChangeSidebarVisibility=i(this,"internalChangeSidebarVisibility",7),this.size="l"}connectedCallback(){this.slotObserver=a(this.self,":scope > dx-header-navigation-item",(t=>{this.children=t.sort(o)}))}componentWillLoad(){e(this.self)}disconnectedCallback(){this.slotObserver.disconnect()}async insertNavigationTree(t,i){if(null==t)return;const s=this.createNavigationItem();if(this.children.length>0){const e={pageIndex:i.value,previousPage:t,navigationItems:[]};s.refersToPage=e,i.value+=1;for(const t of this.children)await t.insertNavigationTree(e,i)}t.navigationItems.push(s)}createNavigationItem(){var t;const i=null!==(t=this.value)&&void 0!==t?t:this.label;return{id:this.self.id,size:this.size,label:this.label,value:i,refersToPage:null,interact:()=>this.interaction.emit({value:i,closeSidebar:()=>{this.internalChangeSidebarVisibility.emit(!1)}})}}get self(){return s(this)}};export{n as dx_header_navigation_item}