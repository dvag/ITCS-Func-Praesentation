'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-2f41386b.js');
const elementIdHandling = require('./element-id-handling-89898a1c.js');
require('./value-store-f683b26f.js');

const dxHeaderMenuLinkCss = ":host{display:block}:host:host([hidden]){display:none !important}";

const DxHeaderMenuLink = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.menuInteraction = index.createEvent(this, "menuInteraction", 7);
    /**
     * Highlights this entry.
     *
     * @value true: Entry highlighted as selected.
     * @value false: Entry not highlighted as selected.
     * @example selected
     */
    this.selected = false;
    /**
     * @internal
     */
    this.internalopen = true;
  }
  componentWillLoad() {
    elementIdHandling.verifyElementId(this.self);
  }
  /**
   * @internal
   */
  async getDefaultWidth() {
    return this.self.shadowRoot.querySelector("dx-header-menu-button")
      .offsetWidth;
  }
  render() {
    return (index.h("dx-horizontal-grow-box", { open: this.internalopen }, index.h("dx-header-menu-button", { id: elementIdHandling.ElementIdGenerator.createId(this.self, "button"), selected: this.selected, onInteraction: () => this.menuInteraction.emit(this.connectednavigationvalue) }, index.h("dx-text", null, this.label))));
  }
  get self() { return index.getElement(this); }
};
DxHeaderMenuLink.style = dxHeaderMenuLinkCss;

exports.dx_header_menu_link = DxHeaderMenuLink;
