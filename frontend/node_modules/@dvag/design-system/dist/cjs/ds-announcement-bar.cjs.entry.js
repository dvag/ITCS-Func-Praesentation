'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-2f41386b.js');
const headerService = require('./header-service-0ef34197.js');
require('./multicast-observable-e5c008e1.js');
require('./value-store-f683b26f.js');

const dsAnnouncementBarCss = ":host{display:block;position:sticky;top:0;left:0;right:0;background-color:white;padding:16px 0;z-index:899}:host:host([hidden]){display:none !important}";

const DsAnnouncementBar = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
  }
  connectedCallback() {
    this.headerHeightSubscription = headerService.subscribeToHeaderHeight((height) => (this.headerHeight = height));
    this.resizeObserver = new ResizeObserver(() => {
      headerService.HeaderService.instance().reserveHeightFor(this.self, this.self.offsetHeight);
    });
    this.resizeObserver.observe(this.self);
  }
  disconnectedCallback() {
    var _a;
    (_a = this.headerHeightSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();
    headerService.HeaderService.instance().freeHeightFor(this.self);
  }
  render() {
    return (index.h(index.Host, { style: { top: `${this.headerHeight}px` } }, index.h("ds-page", null, index.h("slot", null))));
  }
  get self() { return index.getElement(this); }
};
DsAnnouncementBar.style = dsAnnouncementBarCss;

exports.ds_announcement_bar = DsAnnouncementBar;
