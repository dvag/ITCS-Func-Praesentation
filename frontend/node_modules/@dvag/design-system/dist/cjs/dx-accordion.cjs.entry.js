'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-2f41386b.js');
const miscUtil = require('./misc-util-63b423bd.js');

const dxAccordionCss = ":host{display:block}:host:host([hidden]){display:none !important}:host .accordion-container{border-bottom:var(--dx-accordion-border-bottom, 1px solid #d6d6d6)}:host .accordion-container .header{width:var(--dx-button-width, fit-content);width:var(--dx-button-width, -moz-fit-content);cursor:pointer;display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;-webkit-user-select:none;border:none;margin:0;background-color:transparent;transition:background-color 150ms ease-in-out, border-color 150ms ease-in-out;outline-offset:2px;width:100%;display:flex;align-items:start;justify-content:flex-start;padding:20px 16px}:host .accordion-container .header[disabled]{cursor:unset}:host .accordion-container .header.icon-right{flex-direction:row-reverse}:host .accordion-container .header:focus-visible{outline:2px solid #004763}:host .accordion-container .header .label-container{overflow:hidden;text-align:left;white-space:normal}:host .accordion-container .header .icon-container{flex:0 0 24px;margin-right:16px}:host .accordion-container .content{padding:8px 16px 22px 16px}@media (min-width: 760px){:host .accordion-container .content{padding-left:56px}}";

const DxAccordion = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    /**
     * Defines whether the content is visible or not.
     *
     * @value true: The content below the header is visible.
     * @value false: The content below the header is not displayed.
     * @example open
     */
    this.open = false;
  }
  connectedCallback() {
    const groupParent = miscUtil.findUpperElement(this.self, "dx-accordion-group");
    if (groupParent == null) {
      console.warn("<dx-accordion> elements should be wrapped inside a <dx-accordion-group> element!", this.self);
    }
  }
  handleHeaderClick() {
    this.open = !this.open;
  }
  render() {
    return (index.h(index.Host, null, index.h("div", { class: "accordion-container" }, index.h("button", { class: "header", onClick: () => this.handleHeaderClick() }, index.h("div", { class: "icon-container" }, index.h("dx-chevron", { directiontop: this.open })), index.h("div", { class: "label-container" }, index.h("dx-text", { color: "headline" }, this.label))), index.h("dx-simple-grow-box", { open: this.open }, index.h("div", { class: "content" }, index.h("slot", null))))));
  }
  get self() { return index.getElement(this); }
};
DxAccordion.style = dxAccordionCss;

exports.dx_accordion = DxAccordion;
