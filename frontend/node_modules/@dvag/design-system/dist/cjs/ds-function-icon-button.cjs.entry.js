'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-2f41386b.js');
const elementIdHandling = require('./element-id-handling-89898a1c.js');
require('./value-store-f683b26f.js');

const dsFunctionIconButtonCss = ":host{display:inline-block;width:max-content;line-height:0;--ds-text-font-weight:500}:host:host([hidden]){display:none !important}:host:host(.disabled){pointer-events:none}:host:host(.unfocusable) button{box-shadow:none}:host:host ::slotted(*){pointer-events:none}:host:host(.color-gold){--ds-text-color:#a7893d;--ds-icon-color:#a7893d}:host:host(.color-gold):host(:hover){--ds-text-color:#957b36;--ds-icon-color:#957b36}:host:host(.color-gold):host(:active){--ds-text-color:#856d30;--ds-icon-color:#856d30}:host:host(.color-gold):host(.disabled){--ds-text-color:#e3dac4;--ds-icon-color:#e3dac4}:host:host(.color-rot){--ds-text-color:#be1413;--ds-icon-color:#be1413}:host:host(.color-rot):host(:hover){--ds-text-color:#99100f;--ds-icon-color:#99100f}:host:host(.color-rot):host(:active){--ds-text-color:#7d0d0d;--ds-icon-color:#7d0d0d}:host:host(.color-rot):host(.disabled){--ds-text-color:#f2d0cf;--ds-icon-color:#f2d0cf}:host.color-gold{--ds-text-color:#a7893d;--ds-icon-color:#a7893d}:host.color-gold:host(:hover){--ds-text-color:#957b36;--ds-icon-color:#957b36}:host.color-gold:host(:active){--ds-text-color:#856d30;--ds-icon-color:#856d30}:host.color-gold:host(.disabled){--ds-text-color:#e3dac4;--ds-icon-color:#e3dac4}:host.color-rot{--ds-text-color:#be1413;--ds-icon-color:#be1413}:host.color-rot:host(:hover){--ds-text-color:#99100f;--ds-icon-color:#99100f}:host.color-rot:host(:active){--ds-text-color:#7d0d0d;--ds-icon-color:#7d0d0d}:host.color-rot:host(.disabled){--ds-text-color:#f2d0cf;--ds-icon-color:#f2d0cf}:host>button{width:fit-content;width:-moz-fit-content;cursor:pointer;display:inline-flex;justify-content:center;align-items:center;box-sizing:border-box;white-space:nowrap;user-select:none;-webkit-user-select:none;border-radius:6px;border:none;padding:0;margin:0;background-color:transparent;padding:6px}:host>button:focus-visible{outline:none;box-shadow:var(--ds-button-outline-box-shadow, 0 0 0 2px #7f7f7f)}";

const DsFunctionIconButton = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    /**
     * Disables user interaction on the button.
     * @value false: User can interaction with the button.
     * @value true: User can not interaction with the button.
     * @example disabled
     */
    this.disabled = false;
    /**
     * Disables the ability to focus the button via tabulator navigation.
     * @value false: Button is reachable via tab navigation.
     * @value true: Button is ignored when using tab navigation.
     */
    this.unfocusable = false;
  }
  /**
   * Focuses this element.
   */
  async focusControl() {
    this.buttonElement.focus();
  }
  componentWillLoad() {
    elementIdHandling.verifyElementId(this.self);
  }
  render() {
    return (index.h(index.Host, { class: {
        "color-gold": true,
        disabled: this.disabled,
        unfocusable: this.unfocusable,
      } }, index.h("button", { type: "button", ref: (el) => (this.buttonElement = el), id: elementIdHandling.ElementIdGenerator.createId(this.self, "control"), disabled: this.disabled, tabindex: this.unfocusable ? "-1" : "0" }, index.h("slot", null))));
  }
  get self() { return index.getElement(this); }
};
DsFunctionIconButton.style = dsFunctionIconButtonCss;

exports.ds_function_icon_button = DsFunctionIconButton;
