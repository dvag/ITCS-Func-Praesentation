'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-2f41386b.js');
const assert = require('./assert-d8ea75c6.js');
const breakpointAware = require('./breakpoint-aware-cc9d0ee6.js');

const dsHeroImageCss = ":host{display:block;max-width:1440px;background-position:center;background-color:#c1c1c1;background-size:cover;margin:0 auto;height:calc(var(--ds-hero-image-width, 1440) * 0.236)}:host:host([hidden]){display:none !important}";

const DsHeroImage = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
  }
  connectedCallback() {
    this.breakpointAware = new breakpointAware.BreakpointAware(() => {
      this.hidden = this.breakpointAware.xs;
    });
    this.hidden = this.breakpointAware.xs;
    this.initializeResizeObserver();
  }
  disconnectedCallback() {
    var _a, _b;
    (_a = this.resizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
    (_b = this.breakpointAware) === null || _b === void 0 ? void 0 : _b.disconnect();
  }
  initializeResizeObserver() {
    if (this.resizeObserver == null) {
      this.resizeObserver = new ResizeObserver(() => {
        this.currentWidth = this.self.offsetWidth;
      });
    }
    this.resizeObserver.observe(this.self);
  }
  render() {
    if (this.hidden) {
      return;
    }
    assert.assert(this.url != null, () => "<ds-hero-image> Eigenschaft 'url' muss gesetzt sein.");
    return (index.h(index.Host, { style: {
        backgroundImage: `url(${this.url})`,
        "--ds-hero-image-width": this.currentWidth + "px",
      } }));
  }
  get self() { return index.getElement(this); }
};
DsHeroImage.style = dsHeroImageCss;

exports.ds_hero_image = DsHeroImage;
