'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-2f41386b.js');
const assert = require('./assert-d8ea75c6.js');

const dxUserAvatarCss = ":host{display:block;aspect-ratio:1;border-radius:50%;border:1px solid #d6d6d6;box-sizing:border-box;background-color:#ffffff;--ds-text-color:#c8aa22}:host:host([hidden]){display:none !important}:host:host(.size-xs){width:40px;--dx-text-font-size:18px;--dx-text-line-height:28px}:host:host(.size-s){width:56px;--dx-text-font-size:25px;--dx-text-line-height:39px}:host:host(.size-m){width:72px;--dx-text-font-size:32px;--dx-text-line-height:50px}:host:host(.size-l){width:96px;--dx-text-font-size:43px;--dx-text-line-height:67px}:host:host(.size-xl){width:120px;--dx-text-font-size:54px;--dx-text-line-height:84px}:host:host(.size-xxl){width:160px;--dx-text-font-size:72px;--dx-text-line-height:112px}:host .image{width:100%;height:100%;overflow:hidden;border-radius:50%;background-position:center center;background-repeat:no-repeat;background-size:cover}:host .initials{width:100%;height:100%;user-select:none;display:flex;justify-content:center;align-items:center}";

const DxUserAvatar = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
  }
  render() {
    assert.assert(this.imageurl != null || this.initials != null, () => "You have to define at least the `imageurl` or the `initials` property", this.self);
    assert.assertPropertyValue("dx-user-avatar", "size", this.size, [
      ...USER_AVATAR_SIZES,
    ]);
    return (index.h(index.Host, { class: {
        "size-xs": this.size === "xs",
        "size-s": this.size === "s",
        "size-m": this.size === "m",
        "size-l": this.size === "l",
        "size-xl": this.size === "xl",
        "size-xxl": this.size === "xxl",
      } }, this.imageurl != null ? this.renderImage() : this.renderInitials()));
  }
  renderImage() {
    return (index.h("div", { class: "image", style: {
        "background-image": `url(${this.imageurl})`,
      } }));
  }
  renderInitials() {
    var _a;
    return (index.h("div", { class: "initials" }, index.h("dx-text", { color: "headline" }, (_a = this.initials) !== null && _a !== void 0 ? _a : "")));
  }
  get self() { return index.getElement(this); }
};
const USER_AVATAR_SIZES = ["xs", "s", "m", "l", "xl", "xxl"];
DxUserAvatar.style = dxUserAvatarCss;

exports.dx_user_avatar = DxUserAvatar;
