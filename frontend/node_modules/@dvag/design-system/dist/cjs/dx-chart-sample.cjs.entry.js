'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-2f41386b.js');

const DxChartSample = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.valueChange = index.createEvent(this, "valueChange", 7);
  }
  onValueChange(newValue, oldValue) {
    if (newValue !== oldValue) {
      this.valueChange.emit(this.value);
    }
  }
  /**
   * Maps the component into a JS object.
   */
  async toChartSample() {
    const exposedValue = Math.max(this.value, 0) || 0;
    return {
      label: this.label,
      icon: this.icon,
      value: exposedValue,
      color: this.color,
      selectedcolor: this.selectedcolor || this.color,
    };
  }
  componentShouldUpdate() {
    if (isNaN(this.value)) {
      return false;
    }
  }
  static get watchers() { return {
    "value": ["onValueChange"]
  }; }
};

exports.dx_chart_sample = DxChartSample;
